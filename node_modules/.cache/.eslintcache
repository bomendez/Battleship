[{"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/index.js":"1","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/App.js":"2","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/reportWebVitals.js":"3","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/game.jsx":"4","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/Instructions.jsx":"5","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/Landing.jsx":"6","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/restart.jsx":"7","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/board.jsx":"8","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/actions/board.js":"9","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/actions/gametype.js":"10","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/reducers/index.js":"11","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/actions/restart.js":"12","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/square.jsx":"13","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/actions/constants.js":"14","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/reducers/board.js":"15","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/reducers/player.js":"16","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/constants.js":"17","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/store.js":"18","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/actions/updateScore.js":"19"},{"size":801,"mtime":1637820659323,"results":"20","hashOfConfig":"21"},{"size":660,"mtime":1637821010601,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1637820239352,"results":"23","hashOfConfig":"21"},{"size":4973,"mtime":1637868755028,"results":"24","hashOfConfig":"21"},{"size":1094,"mtime":1637821034119,"results":"25","hashOfConfig":"21"},{"size":1007,"mtime":1637868549050,"results":"26","hashOfConfig":"21"},{"size":478,"mtime":1637821243126,"results":"27","hashOfConfig":"21"},{"size":1612,"mtime":1637820855671,"results":"28","hashOfConfig":"21"},{"size":341,"mtime":1637868000754,"results":"29","hashOfConfig":"21"},{"size":196,"mtime":1637820239349,"results":"30","hashOfConfig":"21"},{"size":430,"mtime":1637821369740,"results":"31","hashOfConfig":"21"},{"size":187,"mtime":1637820239349,"results":"32","hashOfConfig":"21"},{"size":1964,"mtime":1637864652694,"results":"33","hashOfConfig":"21"},{"size":332,"mtime":1637867930479,"results":"34","hashOfConfig":"21"},{"size":4795,"mtime":1637869050723,"results":"35","hashOfConfig":"21"},{"size":310,"mtime":1637821374471,"results":"36","hashOfConfig":"21"},{"size":178,"mtime":1637820239350,"results":"37","hashOfConfig":"21"},{"size":330,"mtime":1637820659323,"results":"38","hashOfConfig":"21"},{"size":302,"mtime":1637868111712,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"63mo2n",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/index.js",[],["87","88"],"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/App.js",["89"],"import { Routes, Route, Link } from \"react-router-dom\";\nimport Landing from './components/Landing.jsx';\nimport Instructions from './components/Instructions.jsx';\nimport Game from './components/game.jsx';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Battleship.css';\n\nfunction App() {\n  return (\n    \n    <div className=\"App\">\n      <Routes>\n        {/* <Switch> */}\n          <Route path='/' element={<Landing/>} />\n          <Route path='/game-board' element={<Game/>} />\n          <Route path='/instructions' element={<Instructions/>}  />\n        {/* </Switch> */}\n\n      </Routes>\n    </div>\n    \n  );\n}\n\nexport default App;\n","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/reportWebVitals.js",[],"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/game.jsx",["90","91","92","93","94","95"],"import React, { useState, useEffect } from 'react';\nimport Board from './board.jsx';\nimport Restart from './restart.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { boardClick } from '../actions/board';\nimport { updateScore } from '../actions/updateScore';\n \nfunction Game() {\n        const dispatch = useDispatch();\n        const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n        const user_board = useSelector(state => state.BoardReducer.user_board);\n        const ai_board = useSelector(state => state.BoardReducer.ai_board);\n        const aiPlayed = useSelector(state => state.BoardReducer.aiPlayed);\n        const aiScore = useSelector(state => state.BoardReducer.aiScore);\n        const playerScore = useSelector(state => state.BoardReducer.playerScore);\n        const freePlayScore = useSelector(state => state.BoardReducer.freePlayScore);\n\n        let winner = \"\"\n        if (aiScore == 17) {\n            winner = \"AI wins! Better luck next time.\"\n        }\n        if (playerScore == 17 || freePlayScore == 17) {\n            winner = \"You win! Congrats!\"\n        }\n      \n        function getRandomInteger(maxInt) {\n            return Math.floor(Math.random() * maxInt);\n          }\n        \n          function isUnselected(x_coord, y_coord) {\n            if(user_board[x_coord][y_coord].unselected){\n                return true;\n            }else{\n                return false\n            }\n        }\n\n        \n        function checkCoordinateIsShip(x_coord, y_coord) {\n            if(user_board[x_coord][y_coord].isBoat){\n                return true;\n            }\n                return false\n          }\n        \n          function aiTurn() {\n            let x = getRandomInteger(10)\n            let y = getRandomInteger(10)\n    \n            while (!isUnselected(x, y)) {\n                // get random number unselected\n                x = getRandomInteger(10)\n                y = getRandomInteger(10)\n            }\n            let hitShip = checkCoordinateIsShip(x, y);\n            //exited while loop means, isUnselected returned true\n            let unselected = false;\n            let isEnemyBoard = false;\n            dispatch(boardClick(x, y, isEnemyBoard, hitShip, !hitShip, unselected))\n            if(hitShip){\n                // get score and use set function here\n                let oldScore = aiScore;\n                dispatch(updateScore(oldScore + 1, playerScore, freePlayScore))\n            }\n          }\n\n          const resetScores = function() {\n            // use set function here\n            dispatch(updateScore(0, 0, 0))\n          }\n        \n          if(!aiPlayed && !isFreePlay){\n            aiTurn();\n          }\n        \n          function incrementPlayerScore(isHit){\n            // use set function here\n            if (isFreePlay) {\n                dispatch(updateScore(aiScore, playerScore, freePlayScore + isHit))\n            } else {\n                dispatch(updateScore(aiScore, playerScore + isHit, freePlayScore))\n            }\n          }\n\n        if(isFreePlay){\n            return(\n                <div className=\"container board-wrapper\">\n                <h1>Battleship</h1>\n                <h2>{winner}</h2>\n                <Restart score={resetScores}/>\n                <div className=\"row\">\n                <div className=\"col-lg-3 col-md-12 col-sm-12\">\n                    <h3>Your Score: {freePlayScore}</h3>\n                    {/* <div className=\"ScoreBoard\">          \n                    Ships Hit: {(17- boardStats.player_zero.score)}</div>\n                    <div className={winnerBoardClass}> Congratulations! You hit all ships</div> */}\n                </div>\n                <div className=\"col-lg-9 col-md-12 col-sm-12\">\n                    <Board enemy ={true} doIncrementEnemyScore={incrementPlayerScore}/>\n                </div>\n                </div>\n            </div>);\n        }else{\n        return (\n        <div className=\"container board-wrapper\">\n            <h1>Battleship</h1>            \n            <h2>{winner}</h2>\n            {/* <div className=\"ScoreBoard\">ScoreBoard: \n            Player: {playerTurn} <span> </span>\n            Score: {playerTurn === 0 ? (17 - boardStats.player_one.score): (17- boardStats.player_zero.score)}</div>\n            <div className={winnerBoardClass}>Player {playerZeroWins ? 0 : 1} wins the game</div> */}\n            <Restart score={resetScores}/>\n            <div className=\"row\">\n                <div className='col-lg-6 col-md-12 col-sm-12 playerBoard'>\n                    <h3>Your Board, AI Score: {aiScore}</h3>\n                    <Board enemy={false}/>\n                </div>\n                \n                <div className=\"col-lg-6 col-md-12 col-sm-12\">\n                <h3>Enemy Board, Your Score: {playerScore}</h3>\n                    <Board enemy={true} doIncrementEnemyScore={incrementPlayerScore}/>\n                </div>\n            </div>\n        </div>);\n        }\n}\n \nexport default Game;","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/Instructions.jsx",[],"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/Landing.jsx",["96"],"import { useDispatch, useSelector } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {setGameType} from '../actions/gametype';\nfunction Landing(){\n    const dispatch = useDispatch();\n\n    function setNormalGame(){\n        let gametype = \"normal\";\n        dispatch(setGameType(gametype));\n    }\n\n    function setFreePlay(){\n        let gametype = \"free\";\n        dispatch(setGameType(gametype));\n    }\n    return(\n        <div class=\"container\">\n        <h1>Welcome to Battleship</h1>\n        <p>Please choose your game type</p>\n        <div class=\"game_mode\">\n            <Link to=\"/game-board\" gameType=\"normal\"><button class=\"buttons game\" onClick={setNormalGame}>Normal Game</button></Link>\n            <Link to=\"/game-board\" gameType=\"freePlay\"><button class=\"buttons game\" onClick={setFreePlay}>Free Play</button></Link>\n        </div>\n        <Link to=\"/instructions\"><button class=\"buttons bottom_button\">Instructions >>> </button></Link>\n    </div>\n    )\n} \n\nexport default Landing;","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/restart.jsx",[],"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/board.jsx",["97"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Square } from \"./square\";\n\n\n\nfunction Board(props) {\n  const user_board = useSelector(state => state.BoardReducer.user_board);\n  const ai_board = useSelector(state => state.BoardReducer.ai_board);\n  const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n\n  let board_state;\n  if(props.enemy){\n    board_state = ai_board;\n  }else{\n    board_state = user_board;\n  }\n  \n  const board = initializeBoard();\n  \n  function initializeBoard() {\n    let gridRows = [];\n    for(let row=0; row < board_state.length; row++){\n      const rowSquares = [];\n      for(let col=0; col < board_state[row].length; col++){\n        let square_state = board_state[row][col];\n        if(props.enemy){\n        rowSquares.push(<Square row={row} col={col} enemy={props.enemy} hit={square_state.hit} miss={square_state.miss} unselected={square_state.unselected} is_boat={square_state.isBoat}\n        toIncrementScore={doIncrementScore}/>)\n        }else{\n          rowSquares.push(<Square row={row} col={col} enemy={props.enemy} hit={square_state.hit} miss={square_state.miss} unselected={square_state.unselected} is_boat={square_state.isBoat} \n          toIncrementScore={doIncrementScore}/>)\n        }\n      }\n      gridRows.push(<tr>{rowSquares}</tr>);\n    }\n    return gridRows;\n  }\n\n \n\nfunction doIncrementScore(isHitScore){\n  props.doIncrementEnemyScore(isHitScore);\n}\n\n\n  return (\n    <div class=\"table-responsive\">      \n    <table className=\"board-class\">\n      <tbody>{board}</tbody>\n    </table>\n    </div>\n  );\n}\n\nexport default Board;\n","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/actions/board.js",[],"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/actions/gametype.js",[],"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/reducers/index.js",["98"],"import { combineReducers } from 'redux';\nimport { BoardReducer } from './board';\nimport { PlayerReducer } from './player';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['BoardReducer'],\n}\n\nconst rootReducer = combineReducers({\n    BoardReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/actions/restart.js",[],"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/square.jsx",["99","100"],"import React from 'react';\nimport '../square.css';\nimport { boardClick } from '../actions/board';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { scryRenderedDOMComponentsWithTag } from 'react-dom/test-utils';\n\n\n\nexport function Square(props) {\nconst user_board = useSelector(state => state.BoardReducer.user_board);\nconst ai_board = useSelector(state => state.BoardReducer.ai_board);\nconst [hover, setHover] = useState(false)\nlet board_state;\n  if(props.enemy){\n    board_state = ai_board;\n  }else{\n    board_state = user_board;\n  }\n\n    const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n    const dispatch = useDispatch();\n    \n\n    function setMouseEnter() {\n        setHover(true);\n    }\n\n    function setMouseLeave() {\n        setHover(false)\n    }\n\n    let colorClass='unclicked';\n    let hoverClass = 'hoverClass';\n\n    let icon = \"\";\n    // if(!props.enemy){\n    if (props.is_boat) {\n        colorClass = 'ship';\n        icon = \"fa fa-ship\";\n    }\n    // }\n\n    if (props.hit) {\n        colorClass = 'hitSquare';\n        icon = \"fa fa-bomb\";\n    } else if (props.miss) {\n        colorClass = 'clickedBox';\n        icon = \"fa fa-check-square\";\n    }\n\n    \n\n    function handleClick(){\n        \n        let unselected = board_state[props.row][props.col].unselected; \n        if(unselected){\n            let isHit = false;\n            if(board_state[props.row][props.col].isBoat){\n                isHit = true;\n            }\n            dispatch(boardClick(props.row, props.col, props.enemy, isHit, !isHit, !unselected))\n            if(isHit){\n                props.toIncrementScore(1);\n            }else{\n                props.toIncrementScore(0);\n            }\n        }\n    }\n\n    return (\n        <td  className={hover? hoverClass : colorClass} onClick={handleClick} onMouseEnter={setMouseEnter} onMouseLeave={setMouseLeave}>\n            {<i class={icon}></i>}\n        </td>\n    )\n\n}\n","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/actions/constants.js",[],"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/reducers/board.js",[],"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/reducers/player.js",[],"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/constants.js",[],"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/store.js",["101"],"import {createStore} from 'redux';\nimport reducers from './reducers';\nimport { persistStore } from 'redux-persist';\n\nexport const store = createStore(reducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport const myPersistor = persistStore(store);\n\nexport default {store, myPersistor };","/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/actions/updateScore.js",["102"],"import { UPDATE_SCORE } from \"./constants\";\n\nexport const updateScore = (aiScore, playerScore, freePlayScore) => {\n    return {\n        type: UPDATE_SCORE,\n        payload: {\n            aiScore: aiScore,\n            playerScore: playerScore,\n            freePlayScore, freePlayScore,\n        }\n    }\n}",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":25,"nodeType":"109","messageId":"110","endLine":1,"endColumn":29},{"ruleId":"107","severity":1,"message":"111","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"112","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"113","line":12,"column":15,"nodeType":"109","messageId":"110","endLine":12,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":19,"column":21,"nodeType":"116","messageId":"117","endLine":19,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":22,"column":25,"nodeType":"116","messageId":"117","endLine":22,"endColumn":27},{"ruleId":"114","severity":1,"message":"115","line":22,"column":48,"nodeType":"116","messageId":"117","endLine":22,"endColumn":50},{"ruleId":"107","severity":1,"message":"118","line":1,"column":23,"nodeType":"109","messageId":"110","endLine":1,"endColumn":34},{"ruleId":"107","severity":1,"message":"119","line":10,"column":9,"nodeType":"109","messageId":"110","endLine":10,"endColumn":19},{"ruleId":"107","severity":1,"message":"120","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":23},{"ruleId":"107","severity":1,"message":"121","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":42},{"ruleId":"107","severity":1,"message":"119","line":21,"column":11,"nodeType":"109","messageId":"110","endLine":21,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":10,"column":1,"nodeType":"124","endLine":10,"endColumn":38},{"ruleId":"125","severity":1,"message":"126","line":9,"column":28,"nodeType":"127","messageId":"117","endLine":9,"endColumn":41},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'ai_board' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useSelector' is defined but never used.","'isFreePlay' is assigned a value but never used.","'PlayerReducer' is defined but never used.","'scryRenderedDOMComponentsWithTag' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'freePlayScore'.","ObjectExpression","no-global-assign","no-unsafe-negation"]