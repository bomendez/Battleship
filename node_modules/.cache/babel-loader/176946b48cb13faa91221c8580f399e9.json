{"ast":null,"code":"var _jsxFileName = \"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/board.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Square } from \"./square\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const user_board = useSelector(state => state.BoardReducer.user_board);\n  const ai_board = useSelector(state => state.BoardReducer.ai_board);\n  const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n  let board_state;\n\n  if (props.enemy) {\n    board_state = ai_board;\n  } else {\n    board_state = user_board;\n  }\n\n  const board = initializeBoard();\n\n  function initializeBoard() {\n    let gridRows = [];\n\n    for (let row = 0; row < board_state.length; row++) {\n      const rowSquares = [];\n\n      for (let col = 0; col < board_state[row].length; col++) {\n        let square_state = board_state[row][col];\n\n        if (props.enemy) {\n          rowSquares.push( /*#__PURE__*/_jsxDEV(Square, {\n            row: row,\n            col: col,\n            enemy: props.enemy,\n            hit: square_state.hit,\n            miss: square_state.miss,\n            unselected: square_state.unselected,\n            is_boat: square_state.isBoat,\n            toIncrementScore: doIncrementScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this));\n        } else {\n          rowSquares.push( /*#__PURE__*/_jsxDEV(Square, {\n            row: row,\n            col: col,\n            enemy: props.enemy,\n            hit: square_state.hit,\n            miss: square_state.miss,\n            unselected: square_state.unselected,\n            is_boat: square_state.isBoat,\n            toIncrementScore: doIncrementScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 27\n          }, this));\n        }\n      }\n\n      gridRows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: rowSquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this));\n    }\n\n    return gridRows;\n  }\n\n  function doIncrementScore(isHitScore) {\n    props.doIncrementEnemyScore(isHitScore);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"table-responsive\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"board-class\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"CvcVCBJLECgg3CLyOusvn/FC08Q=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/board.jsx"],"names":["React","useDispatch","useSelector","Square","useState","Board","props","user_board","state","BoardReducer","ai_board","isFreePlay","freePlay","board_state","enemy","board","initializeBoard","gridRows","row","length","rowSquares","col","square_state","push","hit","miss","unselected","isBoat","doIncrementScore","isHitScore","doIncrementEnemyScore"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Square } from \"./square\";\nimport {useState} from 'react';\n\n\n\nfunction Board(props) {\n  const user_board = useSelector(state => state.BoardReducer.user_board);\n  const ai_board = useSelector(state => state.BoardReducer.ai_board);\n  const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n\n  let board_state;\n  if(props.enemy){\n    board_state = ai_board;\n  }else{\n    board_state = user_board;\n  }\n  \n  const board = initializeBoard();\n  \n  function initializeBoard() {\n    let gridRows = [];\n    for(let row=0; row < board_state.length; row++){\n      const rowSquares = [];\n      for(let col=0; col < board_state[row].length; col++){\n        let square_state = board_state[row][col];\n        if(props.enemy){\n        rowSquares.push(<Square row={row} col={col} enemy={props.enemy} hit={square_state.hit} miss={square_state.miss} unselected={square_state.unselected} is_boat={square_state.isBoat}\n        toIncrementScore={doIncrementScore}/>)\n        }else{\n          rowSquares.push(<Square row={row} col={col} enemy={props.enemy} hit={square_state.hit} miss={square_state.miss} unselected={square_state.unselected} is_boat={square_state.isBoat} \n          toIncrementScore={doIncrementScore}/>)\n        }\n      }\n      gridRows.push(<tr>{rowSquares}</tr>);\n    }\n    return gridRows;\n  }\n\n \n\nfunction doIncrementScore(isHitScore){\n  props.doIncrementEnemyScore(isHitScore);\n}\n\n\n  return (\n    <div class=\"table-responsive\">      \n    <table className=\"board-class\">\n      <tbody>{board}</tbody>\n    </table>\n    </div>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}