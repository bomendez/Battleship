{"ast":null,"code":"import React,{useState,useEffect}from'react';import Board from'./board.jsx';import Restart from'./restart.jsx';import{useSelector,useDispatch}from'react-redux';import{boardClick}from'../actions/board';import{updateScore}from'../actions/updateScore';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Game(){var dispatch=useDispatch();var isFreePlay=useSelector(function(state){return state.BoardReducer.freePlay;});var user_board=useSelector(function(state){return state.BoardReducer.user_board;});var ai_board=useSelector(function(state){return state.BoardReducer.ai_board;});var aiPlayed=useSelector(function(state){return state.BoardReducer.aiPlayed;});var aiScore=useSelector(function(state){return state.BoardReducer.aiScore;});var playerScore=useSelector(function(state){return state.BoardReducer.playerScore;});var freePlayScore=useSelector(function(state){return state.BoardReducer.freePlayScore;});var winner=\"\";if(aiScore==17){winner=\"AI wins! Better luck next time.\";}if(playerScore==17||freePlayScore==17){winner=\"You win! Congrats!\";}function getRandomInteger(maxInt){return Math.floor(Math.random()*maxInt);}function isUnselected(x_coord,y_coord){if(user_board[x_coord][y_coord].unselected){return true;}else{return false;}}function checkCoordinateIsShip(x_coord,y_coord){if(user_board[x_coord][y_coord].isBoat){return true;}return false;}function aiTurn(){var x=getRandomInteger(10);var y=getRandomInteger(10);while(!isUnselected(x,y)){// get random number unselected\nx=getRandomInteger(10);y=getRandomInteger(10);}var hitShip=checkCoordinateIsShip(x,y);//exited while loop means, isUnselected returned true\nvar unselected=false;var isEnemyBoard=false;dispatch(boardClick(x,y,isEnemyBoard,hitShip,!hitShip,unselected));if(hitShip){// get score and use set function here\nvar oldScore=aiScore;dispatch(updateScore(oldScore+1,playerScore,freePlayScore));}}var resetScores=function resetScores(){// use set function here\ndispatch(updateScore(0,0,0));};if(!aiPlayed&&!isFreePlay){aiTurn();}function incrementPlayerScore(isHit){// use set function here\nif(isFreePlay){dispatch(updateScore(aiScore,playerScore,freePlayScore+isHit));}else{dispatch(updateScore(aiScore,playerScore+isHit,freePlayScore));}}if(isFreePlay){return/*#__PURE__*/_jsxs(\"div\",{className:\"container board-wrapper\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Battleship\"}),/*#__PURE__*/_jsx(\"h2\",{children:winner}),/*#__PURE__*/_jsx(Restart,{score:resetScores}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-3 col-md-12 col-sm-12\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Your Score: \",freePlayScore]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-9 col-md-12 col-sm-12\",children:/*#__PURE__*/_jsx(Board,{enemy:true,doIncrementEnemyScore:incrementPlayerScore})})]})]});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"container board-wrapper\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Battleship\"}),/*#__PURE__*/_jsx(\"h2\",{children:winner}),/*#__PURE__*/_jsx(Restart,{score:resetScores}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-lg-6 col-md-12 col-sm-12 playerBoard\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Your Board, AI Score: \",aiScore]}),/*#__PURE__*/_jsx(Board,{enemy:false})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-lg-6 col-md-12 col-sm-12\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Enemy Board, Your Score: \",playerScore]}),/*#__PURE__*/_jsx(Board,{enemy:true,doIncrementEnemyScore:incrementPlayerScore})]})]})]});}}export default Game;","map":{"version":3,"names":["React","useState","useEffect","Board","Restart","useSelector","useDispatch","boardClick","updateScore","jsx","_jsx","jsxs","_jsxs","Game","dispatch","isFreePlay","state","BoardReducer","freePlay","user_board","ai_board","aiPlayed","aiScore","playerScore","freePlayScore","winner","getRandomInteger","maxInt","Math","floor","random","isUnselected","x_coord","y_coord","unselected","checkCoordinateIsShip","isBoat","aiTurn","x","y","hitShip","isEnemyBoard","oldScore","resetScores","incrementPlayerScore","isHit","className","children","score","enemy","doIncrementEnemyScore"],"sources":["/Users/bomendez/Documents/CS5610/Battleship/src/components/game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Board from './board.jsx';\nimport Restart from './restart.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { boardClick } from '../actions/board';\nimport { updateScore } from '../actions/updateScore';\n \nfunction Game() {\n        const dispatch = useDispatch();\n        const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n        const user_board = useSelector(state => state.BoardReducer.user_board);\n        const ai_board = useSelector(state => state.BoardReducer.ai_board);\n        const aiPlayed = useSelector(state => state.BoardReducer.aiPlayed);\n        const aiScore = useSelector(state => state.BoardReducer.aiScore);\n        const playerScore = useSelector(state => state.BoardReducer.playerScore);\n        const freePlayScore = useSelector(state => state.BoardReducer.freePlayScore);\n\n        let winner = \"\"\n        if (aiScore == 17) {\n            winner = \"AI wins! Better luck next time.\"\n        }\n        if (playerScore == 17 || freePlayScore == 17) {\n            winner = \"You win! Congrats!\"\n        }\n      \n        function getRandomInteger(maxInt) {\n            return Math.floor(Math.random() * maxInt);\n          }\n        \n          function isUnselected(x_coord, y_coord) {\n            if(user_board[x_coord][y_coord].unselected){\n                return true;\n            }else{\n                return false\n            }\n        }\n\n        \n        function checkCoordinateIsShip(x_coord, y_coord) {\n            if(user_board[x_coord][y_coord].isBoat){\n                return true;\n            }\n                return false\n          }\n        \n          function aiTurn() {\n            let x = getRandomInteger(10)\n            let y = getRandomInteger(10)\n    \n            while (!isUnselected(x, y)) {\n                // get random number unselected\n                x = getRandomInteger(10)\n                y = getRandomInteger(10)\n            }\n            let hitShip = checkCoordinateIsShip(x, y);\n            //exited while loop means, isUnselected returned true\n            let unselected = false;\n            let isEnemyBoard = false;\n            dispatch(boardClick(x, y, isEnemyBoard, hitShip, !hitShip, unselected))\n            if(hitShip){\n                // get score and use set function here\n                let oldScore = aiScore;\n                dispatch(updateScore(oldScore + 1, playerScore, freePlayScore))\n            }\n          }\n\n          const resetScores = function() {\n            // use set function here\n            dispatch(updateScore(0, 0, 0))\n          }\n        \n          if(!aiPlayed && !isFreePlay){\n            aiTurn();\n          }\n        \n          function incrementPlayerScore(isHit){\n            // use set function here\n            if (isFreePlay) {\n                dispatch(updateScore(aiScore, playerScore, freePlayScore + isHit))\n            } else {\n                dispatch(updateScore(aiScore, playerScore + isHit, freePlayScore))\n            }\n          }\n\n        if(isFreePlay){\n            return(\n                <div className=\"container board-wrapper\">\n                <h1>Battleship</h1>\n                <h2>{winner}</h2>\n                <Restart score={resetScores}/>\n                <div className=\"row\">\n                <div className=\"col-lg-3 col-md-12 col-sm-12\">\n                    <h3>Your Score: {freePlayScore}</h3>\n                    {/* <div className=\"ScoreBoard\">          \n                    Ships Hit: {(17- boardStats.player_zero.score)}</div>\n                    <div className={winnerBoardClass}> Congratulations! You hit all ships</div> */}\n                </div>\n                <div className=\"col-lg-9 col-md-12 col-sm-12\">\n                    <Board enemy ={true} doIncrementEnemyScore={incrementPlayerScore}/>\n                </div>\n                </div>\n            </div>);\n        }else{\n        return (\n        <div className=\"container board-wrapper\">\n            <h1>Battleship</h1>            \n            <h2>{winner}</h2>\n            {/* <div className=\"ScoreBoard\">ScoreBoard: \n            Player: {playerTurn} <span> </span>\n            Score: {playerTurn === 0 ? (17 - boardStats.player_one.score): (17- boardStats.player_zero.score)}</div>\n            <div className={winnerBoardClass}>Player {playerZeroWins ? 0 : 1} wins the game</div> */}\n            <Restart score={resetScores}/>\n            <div className=\"row\">\n                <div className='col-lg-6 col-md-12 col-sm-12 playerBoard'>\n                    <h3>Your Board, AI Score: {aiScore}</h3>\n                    <Board enemy={false}/>\n                </div>\n                \n                <div className=\"col-lg-6 col-md-12 col-sm-12\">\n                <h3>Enemy Board, Your Score: {playerScore}</h3>\n                    <Board enemy={true} doIncrementEnemyScore={incrementPlayerScore}/>\n                </div>\n            </div>\n        </div>);\n        }\n}\n \nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}