{"ast":null,"code":"var _jsxFileName = \"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/square.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport '../square.css';\nimport { boardClick } from '../actions/board';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { scryRenderedDOMComponentsWithTag } from 'react-dom/test-utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Square(props) {\n  _s();\n\n  const user_board = useSelector(state => state.BoardReducer.user_board);\n  const ai_board = useSelector(state => state.BoardReducer.ai_board);\n  const [hover, setHover] = useState(false);\n  let board_state;\n\n  if (props.enemy) {\n    board_state = ai_board;\n  } else {\n    board_state = user_board;\n  }\n\n  const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n  const dispatch = useDispatch(); //for free play, dont diplay ships at all\n\n  if (isFreePlay) {// for (let ship in shipsOnBoard) {\n    //     if (checkCoordinateIsShip(ship)) {\n    //         if (unselected) {\n    //             colorClass = 'unclicked';\n    //         }\n    //     }\n    // }\n  }\n\n  function setMouseEnter() {\n    setHover(true);\n  }\n\n  function setMouseLeave() {\n    setHover(false);\n  }\n\n  let colorClass = 'unclicked';\n  let hoverClass = 'hoverClass';\n  let icon = \"\";\n\n  if (!props.enemy) {\n    if (props.is_boat) {\n      colorClass = 'ship';\n      icon = \"fa fa-ship\";\n    }\n  }\n\n  if (props.hit) {\n    colorClass = 'hitSquare';\n    icon = \"fa fa-bomb\";\n  } else if (props.miss) {\n    colorClass = 'clickedBox';\n    icon = \"fa fa-check-square\";\n  }\n\n  function handleClick() {\n    let unselected = board_state[props.row][props.col].unselected;\n\n    if (unselected) {\n      let isHit = false; //console.log(board_state[props.row][props.col]);\n\n      if (board_state[props.row][props.col].isBoat) {\n        isHit = true;\n      }\n\n      dispatch(boardClick(props.row, props.col, props.enemy, isHit, !isHit, !unselected));\n\n      if (isHit) {\n        props.toIncrementScore(1);\n      } else {\n        props.toIncrementScore(0);\n      }\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    //change to include  onhover event next\n    _jsxDEV(\"td\", {\n      className: hover ? hoverClass : colorClass,\n      onClick: handleClick,\n      onMouseEnter: setMouseEnter,\n      onMouseLeave: setMouseLeave,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        class: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Square, \"LXHWB1JDcwhM0TfcC4/LN3WXseg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Square;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/square.jsx"],"names":["React","Component","boardClick","useState","useDispatch","useSelector","scryRenderedDOMComponentsWithTag","Square","props","user_board","state","BoardReducer","ai_board","hover","setHover","board_state","enemy","isFreePlay","freePlay","dispatch","setMouseEnter","setMouseLeave","colorClass","hoverClass","icon","is_boat","hit","miss","handleClick","unselected","row","col","isHit","isBoat","toIncrementScore"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../square.css';\nimport { boardClick } from '../actions/board';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { scryRenderedDOMComponentsWithTag } from 'react-dom/test-utils';\n\n\n\nexport function Square(props) {\nconst user_board = useSelector(state => state.BoardReducer.user_board);\nconst ai_board = useSelector(state => state.BoardReducer.ai_board);\nconst [hover, setHover] = useState(false)\nlet board_state;\n  if(props.enemy){\n    board_state = ai_board;\n  }else{\n    board_state = user_board;\n  }\n\n    const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n    const dispatch = useDispatch();\n\n\n\n\n  \n\n    //for free play, dont diplay ships at all\n    if (isFreePlay) {\n        // for (let ship in shipsOnBoard) {\n        //     if (checkCoordinateIsShip(ship)) {\n        //         if (unselected) {\n        //             colorClass = 'unclicked';\n        //         }\n        //     }\n        // }\n    }\n    \n\n    function setMouseEnter() {\n        setHover(true);\n    }\n\n    function setMouseLeave() {\n        setHover(false)\n    }\n\n\n\n    \n    let colorClass='unclicked';\n    let hoverClass = 'hoverClass';\n\n    let icon = \"\";\n    if(!props.enemy){\n    if (props.is_boat) {\n        colorClass = 'ship';\n        icon = \"fa fa-ship\";\n    }\n    }\n\n    if (props.hit) {\n        colorClass = 'hitSquare';\n        icon = \"fa fa-bomb\";\n    } else if (props.miss) {\n        colorClass = 'clickedBox';\n        icon = \"fa fa-check-square\";\n    }\n\n    \n\n    function handleClick(){\n        \n        let unselected = board_state[props.row][props.col].unselected; \n        if(unselected){\n            let isHit = false;\n            //console.log(board_state[props.row][props.col]);\n            if(board_state[props.row][props.col].isBoat){\n                isHit = true;\n            }\n            dispatch(boardClick(props.row, props.col, props.enemy, isHit, !isHit, !unselected))\n            if(isHit){\n                props.toIncrementScore(1);\n            }else{\n                props.toIncrementScore(0);\n            }\n        }\n    }\n\n    return (\n        //change to include  onhover event next\n        <td  className={hover? hoverClass : colorClass} onClick={handleClick} onMouseEnter={setMouseEnter} onMouseLeave={setMouseLeave}>\n            {<i class={icon}></i>}\n        </td>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}