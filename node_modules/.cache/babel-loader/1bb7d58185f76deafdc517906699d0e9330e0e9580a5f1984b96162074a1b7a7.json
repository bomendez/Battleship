{"ast":null,"code":"import _slicedToArray from \"/Users/bomendez/Documents/CS5610/Battleship/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * React Router v6.0.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { createContext, useRef, useState, useLayoutEffect, createElement, useContext, useEffect, useMemo, useCallback, Children, isValidElement, Fragment } from 'react';\nimport { createMemoryHistory, Action, parsePath } from 'history';\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n} ///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nvar NavigationContext = /*#__PURE__*/createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nvar LocationContext = /*#__PURE__*/createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nvar RouteContext = /*#__PURE__*/createContext({\n  outlet: null,\n  matches: []\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n} ///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nfunction MemoryRouter(_ref) {\n  var basename = _ref.basename,\n    children = _ref.children,\n    initialEntries = _ref.initialEntries,\n    initialIndex = _ref.initialIndex;\n  var historyRef = useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries: initialEntries,\n      initialIndex: initialIndex\n    });\n  }\n  var history = historyRef.current;\n  var _useState = useState({\n      action: history.action,\n      location: history.location\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nfunction Navigate(_ref2) {\n  var to = _ref2.to,\n    replace = _ref2.replace,\n    state = _ref2.state;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  var navigate = useNavigate();\n  useEffect(function () {\n    navigate(to, {\n      replace: replace,\n      state: state\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nfunction Outlet(_props) {\n  return useOutlet();\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false);\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nfunction Router(_ref3) {\n  var _ref3$basename = _ref3.basename,\n    basenameProp = _ref3$basename === void 0 ? \"/\" : _ref3$basename,\n    _ref3$children = _ref3.children,\n    children = _ref3$children === void 0 ? null : _ref3$children,\n    locationProp = _ref3.location,\n    _ref3$navigationType = _ref3.navigationType,\n    navigationType = _ref3$navigationType === void 0 ? Action.Pop : _ref3$navigationType,\n    navigator = _ref3.navigator,\n    _ref3$static = _ref3.static,\n    staticProp = _ref3$static === void 0 ? false : _ref3$static;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0;\n  var basename = normalizePathname(basenameProp);\n  var navigationContext = useMemo(function () {\n    return {\n      basename: basename,\n      navigator: navigator,\n      static: staticProp\n    };\n  }, [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  var _locationProp = locationProp,\n    _locationProp$pathnam = _locationProp.pathname,\n    pathname = _locationProp$pathnam === void 0 ? \"/\" : _locationProp$pathnam,\n    _locationProp$search = _locationProp.search,\n    search = _locationProp$search === void 0 ? \"\" : _locationProp$search,\n    _locationProp$hash = _locationProp.hash,\n    hash = _locationProp$hash === void 0 ? \"\" : _locationProp$hash,\n    _locationProp$state = _locationProp.state,\n    state = _locationProp$state === void 0 ? null : _locationProp$state,\n    _locationProp$key = _locationProp.key,\n    key = _locationProp$key === void 0 ? \"default\" : _locationProp$key;\n  var location = useMemo(function () {\n    var trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      pathname: trailingPathname,\n      search: search,\n      hash: hash,\n      state: state,\n      key: key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (location == null) {\n    return null;\n  }\n  return /*#__PURE__*/createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location: location,\n      navigationType: navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nfunction Routes(_ref4) {\n  var children = _ref4.children,\n    location = _ref4.location;\n  return useRoutes(createRoutesFromChildren(children), location);\n} ///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\n\nfunction useHref(to) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  var _useContext = useContext(NavigationContext),\n    basename = _useContext.basename,\n    navigator = _useContext.navigator;\n  var _useResolvedPath = useResolvedPath(to),\n    hash = _useResolvedPath.hash,\n    pathname = _useResolvedPath.pathname,\n    search = _useResolvedPath.search;\n  var joinedPathname = pathname;\n  if (basename !== \"/\") {\n    var toPathname = getToPathname(to);\n    var endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname = pathname === \"/\" ? basename + (endsWithSlash ? \"/\" : \"\") : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search: search,\n    hash: hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\n\nfunction useInRouterContext() {\n  return useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\n\nfunction useNavigationType() {\n  return useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return matchPath(pattern, useLocation().pathname);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  var _useContext2 = useContext(NavigationContext),\n    basename = _useContext2.basename,\n    navigator = _useContext2.navigator;\n  var _useContext3 = useContext(RouteContext),\n    matches = _useContext3.matches;\n  var _useLocation = useLocation(),\n    locationPathname = _useLocation.pathname;\n  var routePathnamesJson = JSON.stringify(matches.map(function (match) {\n    return match.pathnameBase;\n  }));\n  var activeRef = useRef(false);\n  useEffect(function () {\n    activeRef.current = true;\n  });\n  var navigate = useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    var path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n    if (basename !== \"/\") {\n      path.pathname = joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\n\nfunction useOutlet() {\n  return useContext(RouteContext).outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\n\nfunction useParams() {\n  var _useContext4 = useContext(RouteContext),\n    matches = _useContext4.matches;\n  var routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\n\nfunction useResolvedPath(to) {\n  var _useContext5 = useContext(RouteContext),\n    matches = _useContext5.matches;\n  var _useLocation2 = useLocation(),\n    locationPathname = _useLocation2.pathname;\n  var routePathnamesJson = JSON.stringify(matches.map(function (match) {\n    return match.pathnameBase;\n  }));\n  return useMemo(function () {\n    return resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n  }, [to, routePathnamesJson, locationPathname]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  var _useContext6 = useContext(RouteContext),\n    parentMatches = _useContext6.matches;\n  var routeMatch = parentMatches[parentMatches.length - 1];\n  var parentParams = routeMatch ? routeMatch.params : {};\n  var parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  var parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  var parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    var parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + parentPath + \"/*\\\">.\"));\n  }\n  var locationFromContext = useLocation();\n  var location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    var parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  var pathname = location.pathname || \"/\";\n  var remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  var matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  return _renderMatches(matches && matches.map(function (match) {\n    return Object.assign({}, match, {\n      params: Object.assign({}, parentParams, match.params),\n      pathname: joinPaths([parentPathnameBase, match.pathname]),\n      pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n    });\n  }), parentMatches);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\n\nfunction createRoutesFromChildren(children) {\n  var routes = [];\n  Children.forEach(children, function (element) {\n    if (! /*#__PURE__*/isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    if (element.type === Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    var route = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * The parameters that were parsed from the URL path.\n */\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return path.replace(/:(\\w+)/g, function (_, key) {\n    !(params[key] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Missing \\\":\" + key + \"\\\" param\") : invariant(false) : void 0;\n    return params[key];\n  }).replace(/\\/*\\*$/, function (_) {\n    return params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\");\n  });\n}\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  var location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  var pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  var branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  var matches = null;\n  for (var i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], routes, pathname);\n  }\n  return matches;\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  routes.forEach(function (route, index) {\n    var meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      !meta.relativePath.startsWith(parentPath) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\") : invariant(false) : void 0;\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    var path = joinPaths([parentPath, meta.relativePath]);\n    var routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      !(route.index !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\")) : invariant(false) : void 0;\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path: path,\n      score: computeScore(path, route.index),\n      routesMeta: routesMeta\n    });\n  });\n  return branches;\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(function (a, b) {\n    return a.score !== b.score ? b.score - a.score // Higher score first\n    : compareIndexes(a.routesMeta.map(function (meta) {\n      return meta.childrenIndex;\n    }), b.routesMeta.map(function (meta) {\n      return meta.childrenIndex;\n    }));\n  });\n}\nvar paramRe = /^:\\w+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = function isSplat(s) {\n  return s === \"*\";\n};\nfunction computeScore(path, index) {\n  var segments = path.split(\"/\");\n  var initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(function (s) {\n    return !isSplat(s);\n  }).reduce(function (score, segment) {\n    return score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue);\n  }, initialScore);\n}\nfunction compareIndexes(a, b) {\n  var siblings = a.length === b.length && a.slice(0, -1).every(function (n, i) {\n    return n === b[i];\n  });\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch,\n// TODO: attach original route object inside routesMeta so we don't need this arg\nroutesArg, pathname) {\n  var routes = routesArg;\n  var routesMeta = branch.routesMeta;\n  var matchedParams = {};\n  var matchedPathname = \"/\";\n  var matches = [];\n  for (var i = 0; i < routesMeta.length; ++i) {\n    var meta = routesMeta[i];\n    var end = i === routesMeta.length - 1;\n    var remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    var match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end: end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    var route = routes[meta.childrenIndex];\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: joinPaths([matchedPathname, match.pathnameBase]),\n      route: route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n    routes = route.children;\n  }\n  return matches;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\nfunction _renderMatches(matches, parentMatches) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (matches == null) return null;\n  return matches.reduceRight(function (outlet, match, index) {\n    return /*#__PURE__*/createElement(RouteContext.Provider, {\n      children: match.route.element !== undefined ? match.route.element : /*#__PURE__*/createElement(Outlet, null),\n      value: {\n        outlet: outlet,\n        matches: parentMatches.concat(matches.slice(0, index + 1))\n      }\n    });\n  }, null);\n}\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  var _compilePath = compilePath(pattern.path, pattern.caseSensitive, pattern.end),\n    _compilePath2 = _slicedToArray(_compilePath, 2),\n    matcher = _compilePath2[0],\n    paramNames = _compilePath2[1];\n  var match = pathname.match(matcher);\n  if (!match) return null;\n  var matchedPathname = match[0];\n  var pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  var captureGroups = match.slice(1);\n  var params = paramNames.reduce(function (memo, paramName, index) {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      var splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params: params,\n    pathname: matchedPathname,\n    pathnameBase: pathnameBase,\n    pattern: pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\")) : void 0;\n  var paramNames = [];\n  var regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, function (_, paramName) {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n    :\n    // Otherwise, at least match a word boundary. This restricts parent\n    // routes to matching only their own words and nothing more, e.g. parent\n    // route \"/home\" should not match \"/home2\".\n    \"(?:\\\\b|$)\";\n  }\n  var matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\")) : void 0;\n    return value;\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  var _ref5 = typeof to === \"string\" ? parsePath(to) : to,\n    toPathname = _ref5.pathname,\n    _ref5$search = _ref5.search,\n    search = _ref5$search === void 0 ? \"\" : _ref5$search,\n    _ref5$hash = _ref5.hash,\n    hash = _ref5$hash === void 0 ? \"\" : _ref5$hash;\n  var pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname: pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  var segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  var relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(function (segment) {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction resolveTo(toArg, routePathnames, locationPathname) {\n  var to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  var toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  var from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    var routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      var toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  var path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.\n\n  if (toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\") && !path.pathname.endsWith(\"/\")) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  var nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(basename.length) || \"/\";\n}\nvar joinPaths = function joinPaths(paths) {\n  return paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n};\nvar normalizePathname = function normalizePathname(pathname) {\n  return pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n};\nvar normalizeSearch = function normalizeSearch(search) {\n  return !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n};\nvar normalizeHash = function normalizeHash(hash) {\n  return !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n}; ///////////////////////////////////////////////////////////////////////////////\n\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, createRoutesFromChildren, generatePath, matchPath, matchRoutes, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useParams, useResolvedPath, useRoutes };","map":{"version":3,"names":["createContext","useRef","useState","useLayoutEffect","createElement","useContext","useEffect","useMemo","useCallback","Children","isValidElement","Fragment","createMemoryHistory","Action","parsePath","invariant","cond","message","Error","warning","console","warn","e","alreadyWarned","warningOnce","key","process","env","NODE_ENV","NavigationContext","displayName","LocationContext","RouteContext","outlet","matches","MemoryRouter","_ref","basename","children","initialEntries","initialIndex","historyRef","current","history","_useState","action","location","_useState2","_slicedToArray","state","setState","listen","Router","navigationType","navigator","Navigate","_ref2","to","replace","useInRouterContext","static","navigate","useNavigate","Outlet","_props","useOutlet","Route","_ref3","_ref3$basename","basenameProp","_ref3$children","locationProp","_ref3$navigationType","Pop","_ref3$static","staticProp","normalizePathname","navigationContext","_locationProp","_locationProp$pathnam","pathname","_locationProp$search","search","_locationProp$hash","hash","_locationProp$state","_locationProp$key","trailingPathname","stripBasename","Provider","value","Routes","_ref4","useRoutes","createRoutesFromChildren","useHref","_useContext","_useResolvedPath","useResolvedPath","joinedPathname","toPathname","getToPathname","endsWithSlash","endsWith","joinPaths","createHref","useLocation","useNavigationType","useMatch","pattern","matchPath","_useContext2","_useContext3","_useLocation","locationPathname","routePathnamesJson","JSON","stringify","map","match","pathnameBase","activeRef","options","go","path","resolveTo","parse","push","useParams","_useContext4","routeMatch","length","params","_useContext5","_useLocation2","routes","locationArg","_useContext6","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","route","parentPath","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","startsWith","remainingPathname","slice","matchRoutes","element","undefined","_renderMatches","Object","assign","forEach","type","apply","props","name","caseSensitive","index","generatePath","_","branches","flattenRoutes","rankRouteBranches","i","matchRouteBranch","parentsMeta","meta","relativePath","childrenIndex","routesMeta","concat","score","computeScore","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","segments","split","initialScore","some","filter","reduce","segment","test","siblings","every","n","branch","routesArg","matchedParams","matchedPathname","end","renderMatches","reduceRight","_compilePath","compilePath","_compilePath2","matcher","paramNames","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","regexpSource","RegExp","decodeURIComponent","error","resolvePath","fromPathname","_ref5","_ref5$search","_ref5$hash","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","join","toArg","routePathnames","from","routePathnameIndex","toSegments","shift","toLowerCase","nextChar","charAt","paths","UNSAFE_LocationContext","UNSAFE_NavigationContext","UNSAFE_RouteContext"],"sources":["/Users/bomendez/Documents/CS5610/Battleship/node_modules/react-router/index.js"],"sourcesContent":["/**\n * React Router v6.0.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { createContext, useRef, useState, useLayoutEffect, createElement, useContext, useEffect, useMemo, useCallback, Children, isValidElement, Fragment } from 'react';\nimport { createMemoryHistory, Action, parsePath } from 'history';\n\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n} ///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\n\nconst NavigationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n} ///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nfunction MemoryRouter(_ref) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref;\n  let historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = useState({\n    action: history.action,\n    location: history.location\n  });\n  useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nfunction Navigate(_ref2) {\n  let {\n    to,\n    replace,\n    state\n  } = _ref2;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let navigate = useNavigate();\n  useEffect(() => {\n    navigate(to, {\n      replace,\n      state\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nfunction Outlet(_props) {\n  return useOutlet();\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nfunction Route(_props) {\n   process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nfunction Router(_ref3) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref3;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0;\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nfunction Routes(_ref4) {\n  let {\n    children,\n    location\n  } = _ref4;\n  return useRoutes(createRoutesFromChildren(children), location);\n} ///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\n\nfunction useHref(to) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to);\n  let joinedPathname = pathname;\n\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname = pathname === \"/\" ? basename + (endsWithSlash ? \"/\" : \"\") : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\n\nfunction useInRouterContext() {\n  return useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\n\nfunction useNavigationType() {\n  return useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return matchPath(pattern, useLocation().pathname);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = useContext(NavigationContext);\n  let {\n    matches\n  } = useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));\n  let activeRef = useRef(false);\n  useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n\n    if (basename !== \"/\") {\n      path.pathname = joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\n\nfunction useOutlet() {\n  return useContext(RouteContext).outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\n\nfunction useResolvedPath(to) {\n  let {\n    matches\n  } = useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));\n  return useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname), [to, routePathnamesJson, locationPathname]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    matches: parentMatches\n  } = useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + parentPath + \"/*\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  return _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n  })), parentMatches);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\n\nfunction createRoutesFromChildren(children) {\n  let routes = [];\n  Children.forEach(children, element => {\n    if (! /*#__PURE__*/isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    let route = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * The parameters that were parsed from the URL path.\n */\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path.replace(/:(\\w+)/g, (_, key) => {\n    !(params[key] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Missing \\\":\" + key + \"\\\" param\") : invariant(false) : void 0;\n    return params[key];\n  }).replace(/\\/*\\*$/, _ => params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\"));\n}\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], routes, pathname);\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  routes.forEach((route, index) => {\n    let meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      !meta.relativePath.startsWith(parentPath) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\") : invariant(false) : void 0;\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      !(route.index !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\")) : invariant(false) : void 0;\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  });\n  return branches;\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, // TODO: attach original route object inside routesMeta so we don't need this arg\nroutesArg, pathname) {\n  let routes = routesArg;\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = routes[meta.childrenIndex];\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: joinPaths([matchedPathname, match.pathnameBase]),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n\n    routes = route.children;\n  }\n\n  return matches;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction _renderMatches(matches, parentMatches) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) return null;\n  return matches.reduceRight((outlet, match, index) => {\n    return /*#__PURE__*/createElement(RouteContext.Provider, {\n      children: match.route.element !== undefined ? match.route.element : /*#__PURE__*/createElement(Outlet, null),\n      value: {\n        outlet,\n        matches: parentMatches.concat(matches.slice(0, index + 1))\n      }\n    });\n  }, null);\n}\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\n\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\")) : void 0;\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n    : // Otherwise, at least match a word boundary. This restricts parent\n    // routes to matching only their own words and nothing more, e.g. parent\n    // route \"/home\" should not match \"/home2\".\n    \"(?:\\\\b|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\")) : void 0;\n    return value;\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\n\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction resolveTo(toArg, routePathnames, locationPathname) {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  let from;\n\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.\n\n  if (toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\") && !path.pathname.endsWith(\"/\")) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash; ///////////////////////////////////////////////////////////////////////////////\n\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, createRoutesFromChildren, generatePath, matchPath, matchRoutes, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useParams, useResolvedPath, useRoutes };\n//# sourceMappingURL=index.js.map\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,OAAO;AACxK,SAASC,mBAAmB,EAAEC,MAAM,EAAEC,SAAS,QAAQ,SAAS;AAEhE,SAASC,SAASA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAChC,IAAI,CAACD,IAAI,EAAE,MAAM,IAAIE,KAAK,CAACD,OAAO,CAAC;AACrC;AAEA,SAASE,OAAOA,CAACH,IAAI,EAAEC,OAAO,EAAE;EAC9B,IAAI,CAACD,IAAI,EAAE;IACT;IACA,IAAI,OAAOI,OAAO,KAAK,WAAW,EAAEA,OAAO,CAACC,IAAI,CAACJ,OAAO,CAAC;IAEzD,IAAI;MACF;MACA;MACA;MACA;MACA;MACA,MAAM,IAAIC,KAAK,CAACD,OAAO,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOK,CAAC,EAAE,CAAC;EACf;AACF;AAEA,IAAMC,aAAa,GAAG,CAAC,CAAC;AAExB,SAASC,WAAWA,CAACC,GAAG,EAAET,IAAI,EAAEC,OAAO,EAAE;EACvC,IAAI,CAACD,IAAI,IAAI,CAACO,aAAa,CAACE,GAAG,CAAC,EAAE;IAChCF,aAAa,CAACE,GAAG,CAAC,GAAG,IAAI;IACzBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGT,OAAO,CAAC,KAAK,EAAEF,OAAO,CAAC,GAAG,KAAK,CAAC;EAC1E;AACF,CAAC,CAAC;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAMY,iBAAiB,GAAG,aAAa7B,aAAa,CAAC,IAAI,CAAC;AAE1D,IAAI0B,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCC,iBAAiB,CAACC,WAAW,GAAG,YAAY;AAC9C;AAEA,IAAMC,eAAe,GAAG,aAAa/B,aAAa,CAAC,IAAI,CAAC;AAExD,IAAI0B,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCG,eAAe,CAACD,WAAW,GAAG,UAAU;AAC1C;AAEA,IAAME,YAAY,GAAG,aAAahC,aAAa,CAAC;EAC9CiC,MAAM,EAAE,IAAI;EACZC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,IAAIR,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCI,YAAY,CAACF,WAAW,GAAG,OAAO;AACpC,CAAC,CAAC;AACF;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA,SAASK,YAAYA,CAACC,IAAI,EAAE;EAC1B,IACEC,QAAQ,GAIND,IAAI,CAJNC,QAAQ;IACRC,QAAQ,GAGNF,IAAI,CAHNE,QAAQ;IACRC,cAAc,GAEZH,IAAI,CAFNG,cAAc;IACdC,YAAY,GACVJ,IAAI,CADNI,YAAY;EAEd,IAAIC,UAAU,GAAGxC,MAAM,EAAE;EAEzB,IAAIwC,UAAU,CAACC,OAAO,IAAI,IAAI,EAAE;IAC9BD,UAAU,CAACC,OAAO,GAAG9B,mBAAmB,CAAC;MACvC2B,cAAc,EAAdA,cAAc;MACdC,YAAY,EAAZA;IACF,CAAC,CAAC;EACJ;EAEA,IAAIG,OAAO,GAAGF,UAAU,CAACC,OAAO;EAChC,IAAAE,SAAA,GAAwB1C,QAAQ,CAAC;MAC/B2C,MAAM,EAAEF,OAAO,CAACE,MAAM;MACtBC,QAAQ,EAAEH,OAAO,CAACG;IACpB,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAHGK,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAIpB5C,eAAe,CAAC;IAAA,OAAMwC,OAAO,CAACQ,MAAM,CAACD,QAAQ,CAAC;EAAA,GAAE,CAACP,OAAO,CAAC,CAAC;EAC1D,OAAO,aAAavC,aAAa,CAACgD,MAAM,EAAE;IACxCf,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA,QAAQ;IAClBQ,QAAQ,EAAEG,KAAK,CAACH,QAAQ;IACxBO,cAAc,EAAEJ,KAAK,CAACJ,MAAM;IAC5BS,SAAS,EAAEX;EACb,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASY,QAAQA,CAACC,KAAK,EAAE;EACvB,IACEC,EAAE,GAGAD,KAAK,CAHPC,EAAE;IACFC,OAAO,GAELF,KAAK,CAFPE,OAAO;IACPT,KAAK,GACHO,KAAK,CADPP,KAAK;EAEP,CAACU,kBAAkB,EAAE,GAAGjC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK;EAAE;EACjF;EACA,qEAAqE,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;EAClGW,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGT,OAAO,CAAC,CAACd,UAAU,CAACwB,iBAAiB,CAAC,CAAC+B,MAAM,EAAE,yEAAyE,GAAG,wEAAwE,GAAG,0EAA0E,CAAC,GAAG,KAAK,CAAC;EAClU,IAAIC,QAAQ,GAAGC,WAAW,EAAE;EAC5BxD,SAAS,CAAC,YAAM;IACduD,QAAQ,CAACJ,EAAE,EAAE;MACXC,OAAO,EAAPA,OAAO;MACPT,KAAK,EAALA;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASc,MAAMA,CAACC,MAAM,EAAE;EACtB,OAAOC,SAAS,EAAE;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACF,MAAM,EAAE;EACpBtC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK,EAAE,sEAAsE,GAAG,kEAAkE,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC;AAC3N;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASqC,MAAMA,CAACe,KAAK,EAAE;EACrB,IAAAC,cAAA,GAOID,KAAK,CANP9B,QAAQ;IAAEgC,YAAY,GAAAD,cAAA,cAAG,GAAG,GAAAA,cAAA;IAAAE,cAAA,GAM1BH,KAAK,CALP7B,QAAQ;IAARA,QAAQ,GAAAgC,cAAA,cAAG,IAAI,GAAAA,cAAA;IACLC,YAAY,GAIpBJ,KAAK,CAJPrB,QAAQ;IAAA0B,oBAAA,GAINL,KAAK,CAHPd,cAAc;IAAdA,cAAc,GAAAmB,oBAAA,cAAG3D,MAAM,CAAC4D,GAAG,GAAAD,oBAAA;IAC3BlB,SAAS,GAEPa,KAAK,CAFPb,SAAS;IAAAoB,YAAA,GAEPP,KAAK,CADPP,MAAM;IAAEe,UAAU,GAAAD,YAAA,cAAG,KAAK,GAAAA,YAAA;EAE5B,CAAC,CAACf,kBAAkB,EAAE,GAAGjC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK,EAAE,uDAAuD,GAAG,mDAAmD,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;EAC5N,IAAIsB,QAAQ,GAAGuC,iBAAiB,CAACP,YAAY,CAAC;EAC9C,IAAIQ,iBAAiB,GAAGtE,OAAO,CAAC;IAAA,OAAO;MACrC8B,QAAQ,EAARA,QAAQ;MACRiB,SAAS,EAATA,SAAS;MACTM,MAAM,EAAEe;IACV,CAAC;EAAA,CAAC,EAAE,CAACtC,QAAQ,EAAEiB,SAAS,EAAEqB,UAAU,CAAC,CAAC;EAEtC,IAAI,OAAOJ,YAAY,KAAK,QAAQ,EAAE;IACpCA,YAAY,GAAGzD,SAAS,CAACyD,YAAY,CAAC;EACxC;EAEA,IAAAO,aAAA,GAMIP,YAAY;IAAAQ,qBAAA,GAAAD,aAAA,CALdE,QAAQ;IAARA,QAAQ,GAAAD,qBAAA,cAAG,GAAG,GAAAA,qBAAA;IAAAE,oBAAA,GAAAH,aAAA,CACdI,MAAM;IAANA,MAAM,GAAAD,oBAAA,cAAG,EAAE,GAAAA,oBAAA;IAAAE,kBAAA,GAAAL,aAAA,CACXM,IAAI;IAAJA,IAAI,GAAAD,kBAAA,cAAG,EAAE,GAAAA,kBAAA;IAAAE,mBAAA,GAAAP,aAAA,CACT7B,KAAK;IAALA,KAAK,GAAAoC,mBAAA,cAAG,IAAI,GAAAA,mBAAA;IAAAC,iBAAA,GAAAR,aAAA,CACZrD,GAAG;IAAHA,GAAG,GAAA6D,iBAAA,cAAG,SAAS,GAAAA,iBAAA;EAEjB,IAAIxC,QAAQ,GAAGvC,OAAO,CAAC,YAAM;IAC3B,IAAIgF,gBAAgB,GAAGC,aAAa,CAACR,QAAQ,EAAE3C,QAAQ,CAAC;IAExD,IAAIkD,gBAAgB,IAAI,IAAI,EAAE;MAC5B,OAAO,IAAI;IACb;IAEA,OAAO;MACLP,QAAQ,EAAEO,gBAAgB;MAC1BL,MAAM,EAANA,MAAM;MACNE,IAAI,EAAJA,IAAI;MACJnC,KAAK,EAALA,KAAK;MACLxB,GAAG,EAAHA;IACF,CAAC;EACH,CAAC,EAAE,CAACY,QAAQ,EAAE2C,QAAQ,EAAEE,MAAM,EAAEE,IAAI,EAAEnC,KAAK,EAAExB,GAAG,CAAC,CAAC;EAClDC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGT,OAAO,CAAC2B,QAAQ,IAAI,IAAI,EAAE,qBAAqB,GAAGT,QAAQ,GAAG,mCAAmC,IAAI,IAAI,GAAG2C,QAAQ,GAAGE,MAAM,GAAGE,IAAI,GAAG,wCAAwC,CAAC,GAAG,kDAAkD,CAAC,GAAG,KAAK,CAAC;EAEtR,IAAItC,QAAQ,IAAI,IAAI,EAAE;IACpB,OAAO,IAAI;EACb;EAEA,OAAO,aAAa1C,aAAa,CAACyB,iBAAiB,CAAC4D,QAAQ,EAAE;IAC5DC,KAAK,EAAEb;EACT,CAAC,EAAE,aAAazE,aAAa,CAAC2B,eAAe,CAAC0D,QAAQ,EAAE;IACtDnD,QAAQ,EAAEA,QAAQ;IAClBoD,KAAK,EAAE;MACL5C,QAAQ,EAARA,QAAQ;MACRO,cAAc,EAAdA;IACF;EACF,CAAC,CAAC,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASsC,MAAMA,CAACC,KAAK,EAAE;EACrB,IACEtD,QAAQ,GAENsD,KAAK,CAFPtD,QAAQ;IACRQ,QAAQ,GACN8C,KAAK,CADP9C,QAAQ;EAEV,OAAO+C,SAAS,CAACC,wBAAwB,CAACxD,QAAQ,CAAC,EAAEQ,QAAQ,CAAC;AAChE,CAAC,CAAC;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASiD,OAAOA,CAACtC,EAAE,EAAE;EACnB,CAACE,kBAAkB,EAAE,GAAGjC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK;EAAE;EACjF;EACA,oEAAoE,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;EACjG,IAAAiF,WAAA,GAGI3F,UAAU,CAACwB,iBAAiB,CAAC;IAF/BQ,QAAQ,GAAA2D,WAAA,CAAR3D,QAAQ;IACRiB,SAAS,GAAA0C,WAAA,CAAT1C,SAAS;EAEX,IAAA2C,gBAAA,GAIIC,eAAe,CAACzC,EAAE,CAAC;IAHrB2B,IAAI,GAAAa,gBAAA,CAAJb,IAAI;IACJJ,QAAQ,GAAAiB,gBAAA,CAARjB,QAAQ;IACRE,MAAM,GAAAe,gBAAA,CAANf,MAAM;EAER,IAAIiB,cAAc,GAAGnB,QAAQ;EAE7B,IAAI3C,QAAQ,KAAK,GAAG,EAAE;IACpB,IAAI+D,UAAU,GAAGC,aAAa,CAAC5C,EAAE,CAAC;IAClC,IAAI6C,aAAa,GAAGF,UAAU,IAAI,IAAI,IAAIA,UAAU,CAACG,QAAQ,CAAC,GAAG,CAAC;IAClEJ,cAAc,GAAGnB,QAAQ,KAAK,GAAG,GAAG3C,QAAQ,IAAIiE,aAAa,GAAG,GAAG,GAAG,EAAE,CAAC,GAAGE,SAAS,CAAC,CAACnE,QAAQ,EAAE2C,QAAQ,CAAC,CAAC;EAC7G;EAEA,OAAO1B,SAAS,CAACmD,UAAU,CAAC;IAC1BzB,QAAQ,EAAEmB,cAAc;IACxBjB,MAAM,EAANA,MAAM;IACNE,IAAI,EAAJA;EACF,CAAC,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASzB,kBAAkBA,CAAA,EAAG;EAC5B,OAAOtD,UAAU,CAAC0B,eAAe,CAAC,IAAI,IAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS2E,WAAWA,CAAA,EAAG;EACrB,CAAC/C,kBAAkB,EAAE,GAAGjC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK;EAAE;EACjF;EACA,wEAAwE,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;EACrG,OAAOV,UAAU,CAAC0B,eAAe,CAAC,CAACe,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS6D,iBAAiBA,CAAA,EAAG;EAC3B,OAAOtG,UAAU,CAAC0B,eAAe,CAAC,CAACsB,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASuD,QAAQA,CAACC,OAAO,EAAE;EACzB,CAAClD,kBAAkB,EAAE,GAAGjC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK;EAAE;EACjF;EACA,qEAAqE,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;EAClG,OAAO+F,SAAS,CAACD,OAAO,EAAEH,WAAW,EAAE,CAAC1B,QAAQ,CAAC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASlB,WAAWA,CAAA,EAAG;EACrB,CAACH,kBAAkB,EAAE,GAAGjC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK;EAAE;EACjF;EACA,wEAAwE,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;EACrG,IAAAgG,YAAA,GAGI1G,UAAU,CAACwB,iBAAiB,CAAC;IAF/BQ,QAAQ,GAAA0E,YAAA,CAAR1E,QAAQ;IACRiB,SAAS,GAAAyD,YAAA,CAATzD,SAAS;EAEX,IAAA0D,YAAA,GAEI3G,UAAU,CAAC2B,YAAY,CAAC;IAD1BE,OAAO,GAAA8E,YAAA,CAAP9E,OAAO;EAET,IAAA+E,YAAA,GAEIP,WAAW,EAAE;IADLQ,gBAAgB,GAAAD,YAAA,CAA1BjC,QAAQ;EAEV,IAAImC,kBAAkB,GAAGC,IAAI,CAACC,SAAS,CAACnF,OAAO,CAACoF,GAAG,CAAC,UAAAC,KAAK;IAAA,OAAIA,KAAK,CAACC,YAAY;EAAA,EAAC,CAAC;EACjF,IAAIC,SAAS,GAAGxH,MAAM,CAAC,KAAK,CAAC;EAC7BK,SAAS,CAAC,YAAM;IACdmH,SAAS,CAAC/E,OAAO,GAAG,IAAI;EAC1B,CAAC,CAAC;EACF,IAAImB,QAAQ,GAAGrD,WAAW,CAAC,UAAUiD,EAAE,EAAEiE,OAAO,EAAE;IAChD,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;MACtBA,OAAO,GAAG,CAAC,CAAC;IACd;IAEAhG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGT,OAAO,CAACsG,SAAS,CAAC/E,OAAO,EAAE,8DAA8D,GAAG,mCAAmC,CAAC,GAAG,KAAK,CAAC;IACjL,IAAI,CAAC+E,SAAS,CAAC/E,OAAO,EAAE;IAExB,IAAI,OAAOe,EAAE,KAAK,QAAQ,EAAE;MAC1BH,SAAS,CAACqE,EAAE,CAAClE,EAAE,CAAC;MAChB;IACF;IAEA,IAAImE,IAAI,GAAGC,SAAS,CAACpE,EAAE,EAAE2D,IAAI,CAACU,KAAK,CAACX,kBAAkB,CAAC,EAAED,gBAAgB,CAAC;IAE1E,IAAI7E,QAAQ,KAAK,GAAG,EAAE;MACpBuF,IAAI,CAAC5C,QAAQ,GAAGwB,SAAS,CAAC,CAACnE,QAAQ,EAAEuF,IAAI,CAAC5C,QAAQ,CAAC,CAAC;IACtD;IAEA,CAAC,CAAC,CAAC0C,OAAO,CAAChE,OAAO,GAAGJ,SAAS,CAACI,OAAO,GAAGJ,SAAS,CAACyE,IAAI,EAAEH,IAAI,EAAEF,OAAO,CAACzE,KAAK,CAAC;EAC/E,CAAC,EAAE,CAACZ,QAAQ,EAAEiB,SAAS,EAAE6D,kBAAkB,EAAED,gBAAgB,CAAC,CAAC;EAC/D,OAAOrD,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASI,SAASA,CAAA,EAAG;EACnB,OAAO5D,UAAU,CAAC2B,YAAY,CAAC,CAACC,MAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS+F,SAASA,CAAA,EAAG;EACnB,IAAAC,YAAA,GAEI5H,UAAU,CAAC2B,YAAY,CAAC;IAD1BE,OAAO,GAAA+F,YAAA,CAAP/F,OAAO;EAET,IAAIgG,UAAU,GAAGhG,OAAO,CAACA,OAAO,CAACiG,MAAM,GAAG,CAAC,CAAC;EAC5C,OAAOD,UAAU,GAAGA,UAAU,CAACE,MAAM,GAAG,CAAC,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASlC,eAAeA,CAACzC,EAAE,EAAE;EAC3B,IAAA4E,YAAA,GAEIhI,UAAU,CAAC2B,YAAY,CAAC;IAD1BE,OAAO,GAAAmG,YAAA,CAAPnG,OAAO;EAET,IAAAoG,aAAA,GAEI5B,WAAW,EAAE;IADLQ,gBAAgB,GAAAoB,aAAA,CAA1BtD,QAAQ;EAEV,IAAImC,kBAAkB,GAAGC,IAAI,CAACC,SAAS,CAACnF,OAAO,CAACoF,GAAG,CAAC,UAAAC,KAAK;IAAA,OAAIA,KAAK,CAACC,YAAY;EAAA,EAAC,CAAC;EACjF,OAAOjH,OAAO,CAAC;IAAA,OAAMsH,SAAS,CAACpE,EAAE,EAAE2D,IAAI,CAACU,KAAK,CAACX,kBAAkB,CAAC,EAAED,gBAAgB,CAAC;EAAA,GAAE,CAACzD,EAAE,EAAE0D,kBAAkB,EAAED,gBAAgB,CAAC,CAAC;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASrB,SAASA,CAAC0C,MAAM,EAAEC,WAAW,EAAE;EACtC,CAAC7E,kBAAkB,EAAE,GAAGjC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK;EAAE;EACjF;EACA,sEAAsE,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;EACnG,IAAA0H,YAAA,GAEIpI,UAAU,CAAC2B,YAAY,CAAC;IADjB0G,aAAa,GAAAD,YAAA,CAAtBvG,OAAO;EAET,IAAIgG,UAAU,GAAGQ,aAAa,CAACA,aAAa,CAACP,MAAM,GAAG,CAAC,CAAC;EACxD,IAAIQ,YAAY,GAAGT,UAAU,GAAGA,UAAU,CAACE,MAAM,GAAG,CAAC,CAAC;EACtD,IAAIQ,cAAc,GAAGV,UAAU,GAAGA,UAAU,CAAClD,QAAQ,GAAG,GAAG;EAC3D,IAAI6D,kBAAkB,GAAGX,UAAU,GAAGA,UAAU,CAACV,YAAY,GAAG,GAAG;EACnE,IAAIsB,WAAW,GAAGZ,UAAU,IAAIA,UAAU,CAACa,KAAK;EAEhD,IAAIrH,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIoH,UAAU,GAAGF,WAAW,IAAIA,WAAW,CAAClB,IAAI,IAAI,EAAE;IACtDpG,WAAW,CAACoH,cAAc,EAAE,CAACE,WAAW,IAAIE,UAAU,CAACzC,QAAQ,CAAC,GAAG,CAAC,EAAE,gEAAgE,IAAI,IAAI,GAAGqC,cAAc,GAAG,0BAA0B,GAAGI,UAAU,GAAG,eAAe,CAAC,GAAG,sEAAsE,GAAG,iEAAiE,GAAG,+BAA+B,IAAI,yCAAyC,GAAGA,UAAU,GAAG,gBAAgB,CAAC,IAAI,SAAS,GAAGA,UAAU,GAAG,QAAQ,CAAC,CAAC;EAClgB;EAEA,IAAIC,mBAAmB,GAAGvC,WAAW,EAAE;EACvC,IAAI5D,QAAQ;EAEZ,IAAI0F,WAAW,EAAE;IACf,IAAIU,qBAAqB;IAEzB,IAAIC,iBAAiB,GAAG,OAAOX,WAAW,KAAK,QAAQ,GAAG1H,SAAS,CAAC0H,WAAW,CAAC,GAAGA,WAAW;IAC9F,EAAEK,kBAAkB,KAAK,GAAG,KAAK,CAACK,qBAAqB,GAAGC,iBAAiB,CAACnE,QAAQ,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGkE,qBAAqB,CAACE,UAAU,CAACP,kBAAkB,CAAC,CAAC,CAAC,GAAGnH,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK,EAAE,2FAA2F,GAAG,iFAAiF,IAAI,+DAA+D,GAAG8H,kBAAkB,GAAG,KAAK,CAAC,IAAI,iBAAiB,GAAGM,iBAAiB,CAACnE,QAAQ,GAAG,sCAAsC,CAAC,CAAC,GAAGjE,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;IACpmB+B,QAAQ,GAAGqG,iBAAiB;EAC9B,CAAC,MAAM;IACLrG,QAAQ,GAAGmG,mBAAmB;EAChC;EAEA,IAAIjE,QAAQ,GAAGlC,QAAQ,CAACkC,QAAQ,IAAI,GAAG;EACvC,IAAIqE,iBAAiB,GAAGR,kBAAkB,KAAK,GAAG,GAAG7D,QAAQ,GAAGA,QAAQ,CAACsE,KAAK,CAACT,kBAAkB,CAACV,MAAM,CAAC,IAAI,GAAG;EAChH,IAAIjG,OAAO,GAAGqH,WAAW,CAAChB,MAAM,EAAE;IAChCvD,QAAQ,EAAEqE;EACZ,CAAC,CAAC;EAEF,IAAI3H,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzCF,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGT,OAAO,CAAC2H,WAAW,IAAI5G,OAAO,IAAI,IAAI,EAAE,+BAA+B,GAAGY,QAAQ,CAACkC,QAAQ,GAAGlC,QAAQ,CAACoC,MAAM,GAAGpC,QAAQ,CAACsC,IAAI,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC;IACvL1D,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGT,OAAO,CAACe,OAAO,IAAI,IAAI,IAAIA,OAAO,CAACA,OAAO,CAACiG,MAAM,GAAG,CAAC,CAAC,CAACY,KAAK,CAACS,OAAO,KAAKC,SAAS,EAAE,mCAAmC,GAAG3G,QAAQ,CAACkC,QAAQ,GAAGlC,QAAQ,CAACoC,MAAM,GAAGpC,QAAQ,CAACsC,IAAI,GAAG,+BAA+B,GAAG,sGAAsG,CAAC,GAAG,KAAK,CAAC;EAC5W;EAEA,OAAOsE,cAAc,CAACxH,OAAO,IAAIA,OAAO,CAACoF,GAAG,CAAC,UAAAC,KAAK;IAAA,OAAIoC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAErC,KAAK,EAAE;MAC7Ea,MAAM,EAAEuB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEjB,YAAY,EAAEpB,KAAK,CAACa,MAAM,CAAC;MACrDpD,QAAQ,EAAEwB,SAAS,CAAC,CAACqC,kBAAkB,EAAEtB,KAAK,CAACvC,QAAQ,CAAC,CAAC;MACzDwC,YAAY,EAAED,KAAK,CAACC,YAAY,KAAK,GAAG,GAAGqB,kBAAkB,GAAGrC,SAAS,CAAC,CAACqC,kBAAkB,EAAEtB,KAAK,CAACC,YAAY,CAAC;IACpH,CAAC,CAAC;EAAA,EAAC,EAAEkB,aAAa,CAAC;AACrB,CAAC,CAAC;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS5C,wBAAwBA,CAACxD,QAAQ,EAAE;EAC1C,IAAIiG,MAAM,GAAG,EAAE;EACf9H,QAAQ,CAACoJ,OAAO,CAACvH,QAAQ,EAAE,UAAAkH,OAAO,EAAI;IACpC,IAAI,EAAE,aAAa9I,cAAc,CAAC8I,OAAO,CAAC,EAAE;MAC1C;MACA;MACA;IACF;IAEA,IAAIA,OAAO,CAACM,IAAI,KAAKnJ,QAAQ,EAAE;MAC7B;MACA4H,MAAM,CAACR,IAAI,CAACgC,KAAK,CAACxB,MAAM,EAAEzC,wBAAwB,CAAC0D,OAAO,CAACQ,KAAK,CAAC1H,QAAQ,CAAC,CAAC;MAC3E;IACF;IAEA,EAAEkH,OAAO,CAACM,IAAI,KAAK5F,KAAK,CAAC,GAAGxC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK,EAAE,GAAG,IAAI,OAAOyI,OAAO,CAACM,IAAI,KAAK,QAAQ,GAAGN,OAAO,CAACM,IAAI,GAAGN,OAAO,CAACM,IAAI,CAACG,IAAI,CAAC,GAAG,wGAAwG,CAAC,GAAGlJ,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;IACxS,IAAIgI,KAAK,GAAG;MACVmB,aAAa,EAAEV,OAAO,CAACQ,KAAK,CAACE,aAAa;MAC1CV,OAAO,EAAEA,OAAO,CAACQ,KAAK,CAACR,OAAO;MAC9BW,KAAK,EAAEX,OAAO,CAACQ,KAAK,CAACG,KAAK;MAC1BvC,IAAI,EAAE4B,OAAO,CAACQ,KAAK,CAACpC;IACtB,CAAC;IAED,IAAI4B,OAAO,CAACQ,KAAK,CAAC1H,QAAQ,EAAE;MAC1ByG,KAAK,CAACzG,QAAQ,GAAGwD,wBAAwB,CAAC0D,OAAO,CAACQ,KAAK,CAAC1H,QAAQ,CAAC;IACnE;IAEAiG,MAAM,CAACR,IAAI,CAACgB,KAAK,CAAC;EACpB,CAAC,CAAC;EACF,OAAOR,MAAM;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS6B,YAAYA,CAACxC,IAAI,EAAEQ,MAAM,EAAE;EAClC,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;IACrBA,MAAM,GAAG,CAAC,CAAC;EACb;EAEA,OAAOR,IAAI,CAAClE,OAAO,CAAC,SAAS,EAAE,UAAC2G,CAAC,EAAE5I,GAAG,EAAK;IACzC,EAAE2G,MAAM,CAAC3G,GAAG,CAAC,IAAI,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK,EAAE,aAAa,GAAGU,GAAG,GAAG,UAAU,CAAC,GAAGV,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;IAC/I,OAAOqH,MAAM,CAAC3G,GAAG,CAAC;EACpB,CAAC,CAAC,CAACiC,OAAO,CAAC,QAAQ,EAAE,UAAA2G,CAAC;IAAA,OAAIjC,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,GAAGA,MAAM,CAAC,GAAG,CAAC,CAAC1E,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EAAA,EAAC;AACxF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS6F,WAAWA,CAAChB,MAAM,EAAEC,WAAW,EAAEnG,QAAQ,EAAE;EAClD,IAAIA,QAAQ,KAAK,KAAK,CAAC,EAAE;IACvBA,QAAQ,GAAG,GAAG;EAChB;EAEA,IAAIS,QAAQ,GAAG,OAAO0F,WAAW,KAAK,QAAQ,GAAG1H,SAAS,CAAC0H,WAAW,CAAC,GAAGA,WAAW;EACrF,IAAIxD,QAAQ,GAAGQ,aAAa,CAAC1C,QAAQ,CAACkC,QAAQ,IAAI,GAAG,EAAE3C,QAAQ,CAAC;EAEhE,IAAI2C,QAAQ,IAAI,IAAI,EAAE;IACpB,OAAO,IAAI;EACb;EAEA,IAAIsF,QAAQ,GAAGC,aAAa,CAAChC,MAAM,CAAC;EACpCiC,iBAAiB,CAACF,QAAQ,CAAC;EAC3B,IAAIpI,OAAO,GAAG,IAAI;EAElB,KAAK,IAAIuI,CAAC,GAAG,CAAC,EAAEvI,OAAO,IAAI,IAAI,IAAIuI,CAAC,GAAGH,QAAQ,CAACnC,MAAM,EAAE,EAAEsC,CAAC,EAAE;IAC3DvI,OAAO,GAAGwI,gBAAgB,CAACJ,QAAQ,CAACG,CAAC,CAAC,EAAElC,MAAM,EAAEvD,QAAQ,CAAC;EAC3D;EAEA,OAAO9C,OAAO;AAChB;AAEA,SAASqI,aAAaA,CAAChC,MAAM,EAAE+B,QAAQ,EAAEK,WAAW,EAAE3B,UAAU,EAAE;EAChE,IAAIsB,QAAQ,KAAK,KAAK,CAAC,EAAE;IACvBA,QAAQ,GAAG,EAAE;EACf;EAEA,IAAIK,WAAW,KAAK,KAAK,CAAC,EAAE;IAC1BA,WAAW,GAAG,EAAE;EAClB;EAEA,IAAI3B,UAAU,KAAK,KAAK,CAAC,EAAE;IACzBA,UAAU,GAAG,EAAE;EACjB;EAEAT,MAAM,CAACsB,OAAO,CAAC,UAACd,KAAK,EAAEoB,KAAK,EAAK;IAC/B,IAAIS,IAAI,GAAG;MACTC,YAAY,EAAE9B,KAAK,CAACnB,IAAI,IAAI,EAAE;MAC9BsC,aAAa,EAAEnB,KAAK,CAACmB,aAAa,KAAK,IAAI;MAC3CY,aAAa,EAAEX;IACjB,CAAC;IAED,IAAIS,IAAI,CAACC,YAAY,CAACzB,UAAU,CAAC,GAAG,CAAC,EAAE;MACrC,CAACwB,IAAI,CAACC,YAAY,CAACzB,UAAU,CAACJ,UAAU,CAAC,GAAGtH,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK,EAAE,wBAAwB,GAAG6J,IAAI,CAACC,YAAY,GAAG,uBAAuB,IAAI,IAAI,GAAG7B,UAAU,GAAG,gDAAgD,CAAC,GAAG,6DAA6D,CAAC,GAAGjI,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;MACjV6J,IAAI,CAACC,YAAY,GAAGD,IAAI,CAACC,YAAY,CAACvB,KAAK,CAACN,UAAU,CAACb,MAAM,CAAC;IAChE;IAEA,IAAIP,IAAI,GAAGpB,SAAS,CAAC,CAACwC,UAAU,EAAE4B,IAAI,CAACC,YAAY,CAAC,CAAC;IACrD,IAAIE,UAAU,GAAGJ,WAAW,CAACK,MAAM,CAACJ,IAAI,CAAC,CAAC,CAAC;IAC3C;IACA;;IAEA,IAAI7B,KAAK,CAACzG,QAAQ,IAAIyG,KAAK,CAACzG,QAAQ,CAAC6F,MAAM,GAAG,CAAC,EAAE;MAC/C,EAAEY,KAAK,CAACoB,KAAK,KAAK,IAAI,CAAC,GAAGzI,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,SAAS,CAAC,KAAK,EAAE,yDAAyD,IAAI,qCAAqC,GAAG6G,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG7G,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;MAClOwJ,aAAa,CAACxB,KAAK,CAACzG,QAAQ,EAAEgI,QAAQ,EAAES,UAAU,EAAEnD,IAAI,CAAC;IAC3D,CAAC,CAAC;IACF;;IAGA,IAAImB,KAAK,CAACnB,IAAI,IAAI,IAAI,IAAI,CAACmB,KAAK,CAACoB,KAAK,EAAE;MACtC;IACF;IAEAG,QAAQ,CAACvC,IAAI,CAAC;MACZH,IAAI,EAAJA,IAAI;MACJqD,KAAK,EAAEC,YAAY,CAACtD,IAAI,EAAEmB,KAAK,CAACoB,KAAK,CAAC;MACtCY,UAAU,EAAVA;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOT,QAAQ;AACjB;AAEA,SAASE,iBAAiBA,CAACF,QAAQ,EAAE;EACnCA,QAAQ,CAACa,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAACH,KAAK,KAAKI,CAAC,CAACJ,KAAK,GAAGI,CAAC,CAACJ,KAAK,GAAGG,CAAC,CAACH,KAAK,CAAC;IAAA,EAC9DK,cAAc,CAACF,CAAC,CAACL,UAAU,CAACzD,GAAG,CAAC,UAAAsD,IAAI;MAAA,OAAIA,IAAI,CAACE,aAAa;IAAA,EAAC,EAAEO,CAAC,CAACN,UAAU,CAACzD,GAAG,CAAC,UAAAsD,IAAI;MAAA,OAAIA,IAAI,CAACE,aAAa;IAAA,EAAC,CAAC;EAAA,EAAC;AAC/G;AAEA,IAAMS,OAAO,GAAG,QAAQ;AACxB,IAAMC,mBAAmB,GAAG,CAAC;AAC7B,IAAMC,eAAe,GAAG,CAAC;AACzB,IAAMC,iBAAiB,GAAG,CAAC;AAC3B,IAAMC,kBAAkB,GAAG,EAAE;AAC7B,IAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAGC,CAAC;EAAA,OAAIA,CAAC,KAAK,GAAG;AAAA;AAE9B,SAASZ,YAAYA,CAACtD,IAAI,EAAEuC,KAAK,EAAE;EACjC,IAAI4B,QAAQ,GAAGnE,IAAI,CAACoE,KAAK,CAAC,GAAG,CAAC;EAC9B,IAAIC,YAAY,GAAGF,QAAQ,CAAC5D,MAAM;EAElC,IAAI4D,QAAQ,CAACG,IAAI,CAACL,OAAO,CAAC,EAAE;IAC1BI,YAAY,IAAIL,YAAY;EAC9B;EAEA,IAAIzB,KAAK,EAAE;IACT8B,YAAY,IAAIR,eAAe;EACjC;EAEA,OAAOM,QAAQ,CAACI,MAAM,CAAC,UAAAL,CAAC;IAAA,OAAI,CAACD,OAAO,CAACC,CAAC,CAAC;EAAA,EAAC,CAACM,MAAM,CAAC,UAACnB,KAAK,EAAEoB,OAAO;IAAA,OAAKpB,KAAK,IAAIM,OAAO,CAACe,IAAI,CAACD,OAAO,CAAC,GAAGb,mBAAmB,GAAGa,OAAO,KAAK,EAAE,GAAGX,iBAAiB,GAAGC,kBAAkB,CAAC;EAAA,GAAEM,YAAY,CAAC;AACpM;AAEA,SAASX,cAAcA,CAACF,CAAC,EAAEC,CAAC,EAAE;EAC5B,IAAIkB,QAAQ,GAAGnB,CAAC,CAACjD,MAAM,KAAKkD,CAAC,CAAClD,MAAM,IAAIiD,CAAC,CAAC9B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACkD,KAAK,CAAC,UAACC,CAAC,EAAEhC,CAAC;IAAA,OAAKgC,CAAC,KAAKpB,CAAC,CAACZ,CAAC,CAAC;EAAA,EAAC;EAClF,OAAO8B,QAAQ;EAAG;EAClB;EACA;EACA;EACAnB,CAAC,CAACA,CAAC,CAACjD,MAAM,GAAG,CAAC,CAAC,GAAGkD,CAAC,CAACA,CAAC,CAAClD,MAAM,GAAG,CAAC,CAAC;EAAG;EACpC;EACA,CAAC;AACH;AAEA,SAASuC,gBAAgBA,CAACgC,MAAM;AAAE;AAClCC,SAAS,EAAE3H,QAAQ,EAAE;EACnB,IAAIuD,MAAM,GAAGoE,SAAS;EACtB,IACE5B,UAAU,GACR2B,MAAM,CADR3B,UAAU;EAEZ,IAAI6B,aAAa,GAAG,CAAC,CAAC;EACtB,IAAIC,eAAe,GAAG,GAAG;EACzB,IAAI3K,OAAO,GAAG,EAAE;EAEhB,KAAK,IAAIuI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,UAAU,CAAC5C,MAAM,EAAE,EAAEsC,CAAC,EAAE;IAC1C,IAAIG,IAAI,GAAGG,UAAU,CAACN,CAAC,CAAC;IACxB,IAAIqC,GAAG,GAAGrC,CAAC,KAAKM,UAAU,CAAC5C,MAAM,GAAG,CAAC;IACrC,IAAIkB,iBAAiB,GAAGwD,eAAe,KAAK,GAAG,GAAG7H,QAAQ,GAAGA,QAAQ,CAACsE,KAAK,CAACuD,eAAe,CAAC1E,MAAM,CAAC,IAAI,GAAG;IAC1G,IAAIZ,KAAK,GAAGT,SAAS,CAAC;MACpBc,IAAI,EAAEgD,IAAI,CAACC,YAAY;MACvBX,aAAa,EAAEU,IAAI,CAACV,aAAa;MACjC4C,GAAG,EAAHA;IACF,CAAC,EAAEzD,iBAAiB,CAAC;IACrB,IAAI,CAAC9B,KAAK,EAAE,OAAO,IAAI;IACvBoC,MAAM,CAACC,MAAM,CAACgD,aAAa,EAAErF,KAAK,CAACa,MAAM,CAAC;IAC1C,IAAIW,KAAK,GAAGR,MAAM,CAACqC,IAAI,CAACE,aAAa,CAAC;IACtC5I,OAAO,CAAC6F,IAAI,CAAC;MACXK,MAAM,EAAEwE,aAAa;MACrB5H,QAAQ,EAAEwB,SAAS,CAAC,CAACqG,eAAe,EAAEtF,KAAK,CAACvC,QAAQ,CAAC,CAAC;MACtDwC,YAAY,EAAEhB,SAAS,CAAC,CAACqG,eAAe,EAAEtF,KAAK,CAACC,YAAY,CAAC,CAAC;MAC9DuB,KAAK,EAALA;IACF,CAAC,CAAC;IAEF,IAAIxB,KAAK,CAACC,YAAY,KAAK,GAAG,EAAE;MAC9BqF,eAAe,GAAGrG,SAAS,CAAC,CAACqG,eAAe,EAAEtF,KAAK,CAACC,YAAY,CAAC,CAAC;IACpE;IAEAe,MAAM,GAAGQ,KAAK,CAACzG,QAAQ;EACzB;EAEA,OAAOJ,OAAO;AAChB;AACA;AACA;AACA;;AAGA,SAAS6K,aAAaA,CAAC7K,OAAO,EAAE;EAC9B,OAAOwH,cAAc,CAACxH,OAAO,CAAC;AAChC;AAEA,SAASwH,cAAcA,CAACxH,OAAO,EAAEwG,aAAa,EAAE;EAC9C,IAAIA,aAAa,KAAK,KAAK,CAAC,EAAE;IAC5BA,aAAa,GAAG,EAAE;EACpB;EAEA,IAAIxG,OAAO,IAAI,IAAI,EAAE,OAAO,IAAI;EAChC,OAAOA,OAAO,CAAC8K,WAAW,CAAC,UAAC/K,MAAM,EAAEsF,KAAK,EAAE4C,KAAK,EAAK;IACnD,OAAO,aAAa/J,aAAa,CAAC4B,YAAY,CAACyD,QAAQ,EAAE;MACvDnD,QAAQ,EAAEiF,KAAK,CAACwB,KAAK,CAACS,OAAO,KAAKC,SAAS,GAAGlC,KAAK,CAACwB,KAAK,CAACS,OAAO,GAAG,aAAapJ,aAAa,CAAC2D,MAAM,EAAE,IAAI,CAAC;MAC5G2B,KAAK,EAAE;QACLzD,MAAM,EAANA,MAAM;QACNC,OAAO,EAAEwG,aAAa,CAACsC,MAAM,CAAC9I,OAAO,CAACoH,KAAK,CAAC,CAAC,EAAEa,KAAK,GAAG,CAAC,CAAC;MAC3D;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,IAAI,CAAC;AACV;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAASrD,SAASA,CAACD,OAAO,EAAE7B,QAAQ,EAAE;EACpC,IAAI,OAAO6B,OAAO,KAAK,QAAQ,EAAE;IAC/BA,OAAO,GAAG;MACRe,IAAI,EAAEf,OAAO;MACbqD,aAAa,EAAE,KAAK;MACpB4C,GAAG,EAAE;IACP,CAAC;EACH;EAEA,IAAAG,YAAA,GAA4BC,WAAW,CAACrG,OAAO,CAACe,IAAI,EAAEf,OAAO,CAACqD,aAAa,EAAErD,OAAO,CAACiG,GAAG,CAAC;IAAAK,aAAA,GAAAnK,cAAA,CAAAiK,YAAA;IAApFG,OAAO,GAAAD,aAAA;IAAEE,UAAU,GAAAF,aAAA;EACxB,IAAI5F,KAAK,GAAGvC,QAAQ,CAACuC,KAAK,CAAC6F,OAAO,CAAC;EACnC,IAAI,CAAC7F,KAAK,EAAE,OAAO,IAAI;EACvB,IAAIsF,eAAe,GAAGtF,KAAK,CAAC,CAAC,CAAC;EAC9B,IAAIC,YAAY,GAAGqF,eAAe,CAACnJ,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC;EAC3D,IAAI4J,aAAa,GAAG/F,KAAK,CAAC+B,KAAK,CAAC,CAAC,CAAC;EAClC,IAAIlB,MAAM,GAAGiF,UAAU,CAACjB,MAAM,CAAC,UAACmB,IAAI,EAAEC,SAAS,EAAErD,KAAK,EAAK;IACzD;IACA;IACA,IAAIqD,SAAS,KAAK,GAAG,EAAE;MACrB,IAAIC,UAAU,GAAGH,aAAa,CAACnD,KAAK,CAAC,IAAI,EAAE;MAC3C3C,YAAY,GAAGqF,eAAe,CAACvD,KAAK,CAAC,CAAC,EAAEuD,eAAe,CAAC1E,MAAM,GAAGsF,UAAU,CAACtF,MAAM,CAAC,CAACzE,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC;IAC9G;IAEA6J,IAAI,CAACC,SAAS,CAAC,GAAGE,wBAAwB,CAACJ,aAAa,CAACnD,KAAK,CAAC,IAAI,EAAE,EAAEqD,SAAS,CAAC;IACjF,OAAOD,IAAI;EACb,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAO;IACLnF,MAAM,EAANA,MAAM;IACNpD,QAAQ,EAAE6H,eAAe;IACzBrF,YAAY,EAAZA,YAAY;IACZX,OAAO,EAAPA;EACF,CAAC;AACH;AAEA,SAASqG,WAAWA,CAACtF,IAAI,EAAEsC,aAAa,EAAE4C,GAAG,EAAE;EAC7C,IAAI5C,aAAa,KAAK,KAAK,CAAC,EAAE;IAC5BA,aAAa,GAAG,KAAK;EACvB;EAEA,IAAI4C,GAAG,KAAK,KAAK,CAAC,EAAE;IAClBA,GAAG,GAAG,IAAI;EACZ;EAEApL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGT,OAAO,CAACyG,IAAI,KAAK,GAAG,IAAI,CAACA,IAAI,CAACrB,QAAQ,CAAC,GAAG,CAAC,IAAIqB,IAAI,CAACrB,QAAQ,CAAC,IAAI,CAAC,EAAE,eAAe,GAAGqB,IAAI,GAAG,mCAAmC,IAAI,IAAI,GAAGA,IAAI,CAAClE,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,oCAAoC,CAAC,GAAG,kEAAkE,IAAI,oCAAoC,GAAGkE,IAAI,CAAClE,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;EAChZ,IAAI2J,UAAU,GAAG,EAAE;EACnB,IAAIM,YAAY,GAAG,GAAG,GAAG/F,IAAI,CAAClE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;EAAA,CACpDA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;EAAA,CACrBA,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC,CAAC;EAAA,CACvCA,OAAO,CAAC,SAAS,EAAE,UAAC2G,CAAC,EAAEmD,SAAS,EAAK;IACpCH,UAAU,CAACtF,IAAI,CAACyF,SAAS,CAAC;IAC1B,OAAO,WAAW;EACpB,CAAC,CAAC;EAEF,IAAI5F,IAAI,CAACrB,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtB8G,UAAU,CAACtF,IAAI,CAAC,GAAG,CAAC;IACpB4F,YAAY,IAAI/F,IAAI,KAAK,GAAG,IAAIA,IAAI,KAAK,IAAI,GAAG,OAAO,CAAC;IAAA,EACtD,mBAAmB,CAAC,CAAC;EACzB,CAAC,MAAM;IACL+F,YAAY,IAAIb,GAAG,GAAG,OAAO,CAAC;IAAA;IAC5B;IACF;IACA;IACA,WAAW;EACb;EAEA,IAAIM,OAAO,GAAG,IAAIQ,MAAM,CAACD,YAAY,EAAEzD,aAAa,GAAGT,SAAS,GAAG,GAAG,CAAC;EACvE,OAAO,CAAC2D,OAAO,EAAEC,UAAU,CAAC;AAC9B;AAEA,SAASK,wBAAwBA,CAAChI,KAAK,EAAE8H,SAAS,EAAE;EAClD,IAAI;IACF,OAAOK,kBAAkB,CAACnI,KAAK,CAAC;EAClC,CAAC,CAAC,OAAOoI,KAAK,EAAE;IACdpM,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGT,OAAO,CAAC,KAAK,EAAE,gCAAgC,GAAGqM,SAAS,GAAG,gCAAgC,IAAI,gBAAgB,GAAG9H,KAAK,GAAG,iDAAiD,CAAC,IAAI,kCAAkC,GAAGoI,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;IACvR,OAAOpI,KAAK;EACd;AACF;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASqI,WAAWA,CAACtK,EAAE,EAAEuK,YAAY,EAAE;EACrC,IAAIA,YAAY,KAAK,KAAK,CAAC,EAAE;IAC3BA,YAAY,GAAG,GAAG;EACpB;EAEA,IAAAC,KAAA,GAII,OAAOxK,EAAE,KAAK,QAAQ,GAAG3C,SAAS,CAAC2C,EAAE,CAAC,GAAGA,EAAE;IAHnC2C,UAAU,GAAA6H,KAAA,CAApBjJ,QAAQ;IAAAkJ,YAAA,GAAAD,KAAA,CACR/I,MAAM;IAANA,MAAM,GAAAgJ,YAAA,cAAG,EAAE,GAAAA,YAAA;IAAAC,UAAA,GAAAF,KAAA,CACX7I,IAAI;IAAJA,IAAI,GAAA+I,UAAA,cAAG,EAAE,GAAAA,UAAA;EAEX,IAAInJ,QAAQ,GAAGoB,UAAU,GAAGA,UAAU,CAACgD,UAAU,CAAC,GAAG,CAAC,GAAGhD,UAAU,GAAGgI,eAAe,CAAChI,UAAU,EAAE4H,YAAY,CAAC,GAAGA,YAAY;EAC9H,OAAO;IACLhJ,QAAQ,EAARA,QAAQ;IACRE,MAAM,EAAEmJ,eAAe,CAACnJ,MAAM,CAAC;IAC/BE,IAAI,EAAEkJ,aAAa,CAAClJ,IAAI;EAC1B,CAAC;AACH;AAEA,SAASgJ,eAAeA,CAACvD,YAAY,EAAEmD,YAAY,EAAE;EACnD,IAAIjC,QAAQ,GAAGiC,YAAY,CAACtK,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACsI,KAAK,CAAC,GAAG,CAAC;EAC1D,IAAIuC,gBAAgB,GAAG1D,YAAY,CAACmB,KAAK,CAAC,GAAG,CAAC;EAC9CuC,gBAAgB,CAAC1E,OAAO,CAAC,UAAAwC,OAAO,EAAI;IAClC,IAAIA,OAAO,KAAK,IAAI,EAAE;MACpB;MACA,IAAIN,QAAQ,CAAC5D,MAAM,GAAG,CAAC,EAAE4D,QAAQ,CAACyC,GAAG,EAAE;IACzC,CAAC,MAAM,IAAInC,OAAO,KAAK,GAAG,EAAE;MAC1BN,QAAQ,CAAChE,IAAI,CAACsE,OAAO,CAAC;IACxB;EACF,CAAC,CAAC;EACF,OAAON,QAAQ,CAAC5D,MAAM,GAAG,CAAC,GAAG4D,QAAQ,CAAC0C,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;AACvD;AAEA,SAAS5G,SAASA,CAAC6G,KAAK,EAAEC,cAAc,EAAEzH,gBAAgB,EAAE;EAC1D,IAAIzD,EAAE,GAAG,OAAOiL,KAAK,KAAK,QAAQ,GAAG5N,SAAS,CAAC4N,KAAK,CAAC,GAAGA,KAAK;EAC7D,IAAItI,UAAU,GAAGsI,KAAK,KAAK,EAAE,IAAIjL,EAAE,CAACuB,QAAQ,KAAK,EAAE,GAAG,GAAG,GAAGvB,EAAE,CAACuB,QAAQ,CAAC,CAAC;EACzE;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAI4J,IAAI;EAER,IAAIxI,UAAU,IAAI,IAAI,EAAE;IACtBwI,IAAI,GAAG1H,gBAAgB;EACzB,CAAC,MAAM;IACL,IAAI2H,kBAAkB,GAAGF,cAAc,CAACxG,MAAM,GAAG,CAAC;IAElD,IAAI/B,UAAU,CAACgD,UAAU,CAAC,IAAI,CAAC,EAAE;MAC/B,IAAI0F,UAAU,GAAG1I,UAAU,CAAC4F,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;MACxC;MACA;;MAEA,OAAO8C,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;QAC7BA,UAAU,CAACC,KAAK,EAAE;QAClBF,kBAAkB,IAAI,CAAC;MACzB;MAEApL,EAAE,CAACuB,QAAQ,GAAG8J,UAAU,CAACL,IAAI,CAAC,GAAG,CAAC;IACpC,CAAC,CAAC;IACF;;IAGAG,IAAI,GAAGC,kBAAkB,IAAI,CAAC,GAAGF,cAAc,CAACE,kBAAkB,CAAC,GAAG,GAAG;EAC3E;EAEA,IAAIjH,IAAI,GAAGmG,WAAW,CAACtK,EAAE,EAAEmL,IAAI,CAAC,CAAC,CAAC;;EAElC,IAAIxI,UAAU,IAAIA,UAAU,KAAK,GAAG,IAAIA,UAAU,CAACG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACqB,IAAI,CAAC5C,QAAQ,CAACuB,QAAQ,CAAC,GAAG,CAAC,EAAE;IAChGqB,IAAI,CAAC5C,QAAQ,IAAI,GAAG;EACtB;EAEA,OAAO4C,IAAI;AACb;AAEA,SAASvB,aAAaA,CAAC5C,EAAE,EAAE;EACzB;EACA,OAAOA,EAAE,KAAK,EAAE,IAAIA,EAAE,CAACuB,QAAQ,KAAK,EAAE,GAAG,GAAG,GAAG,OAAOvB,EAAE,KAAK,QAAQ,GAAG3C,SAAS,CAAC2C,EAAE,CAAC,CAACuB,QAAQ,GAAGvB,EAAE,CAACuB,QAAQ;AAC9G;AAEA,SAASQ,aAAaA,CAACR,QAAQ,EAAE3C,QAAQ,EAAE;EACzC,IAAIA,QAAQ,KAAK,GAAG,EAAE,OAAO2C,QAAQ;EAErC,IAAI,CAACA,QAAQ,CAACgK,WAAW,EAAE,CAAC5F,UAAU,CAAC/G,QAAQ,CAAC2M,WAAW,EAAE,CAAC,EAAE;IAC9D,OAAO,IAAI;EACb;EAEA,IAAIC,QAAQ,GAAGjK,QAAQ,CAACkK,MAAM,CAAC7M,QAAQ,CAAC8F,MAAM,CAAC;EAE/C,IAAI8G,QAAQ,IAAIA,QAAQ,KAAK,GAAG,EAAE;IAChC;IACA,OAAO,IAAI;EACb;EAEA,OAAOjK,QAAQ,CAACsE,KAAK,CAACjH,QAAQ,CAAC8F,MAAM,CAAC,IAAI,GAAG;AAC/C;AAEA,IAAM3B,SAAS,GAAG,SAAZA,SAASA,CAAG2I,KAAK;EAAA,OAAIA,KAAK,CAACV,IAAI,CAAC,GAAG,CAAC,CAAC/K,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;AAAA;AAEjE,IAAMkB,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAGI,QAAQ;EAAA,OAAIA,QAAQ,CAACtB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;AAAA;AAEvF,IAAM2K,eAAe,GAAG,SAAlBA,eAAeA,CAAGnJ,MAAM;EAAA,OAAI,CAACA,MAAM,IAAIA,MAAM,KAAK,GAAG,GAAG,EAAE,GAAGA,MAAM,CAACkE,UAAU,CAAC,GAAG,CAAC,GAAGlE,MAAM,GAAG,GAAG,GAAGA,MAAM;AAAA;AAEjH,IAAMoJ,aAAa,GAAG,SAAhBA,aAAaA,CAAGlJ,IAAI;EAAA,OAAI,CAACA,IAAI,IAAIA,IAAI,KAAK,GAAG,GAAG,EAAE,GAAGA,IAAI,CAACgE,UAAU,CAAC,GAAG,CAAC,GAAGhE,IAAI,GAAG,GAAG,GAAGA,IAAI;AAAA,EAAC,CAAC;;AAErG,SAASjD,YAAY,EAAEoB,QAAQ,EAAEQ,MAAM,EAAEG,KAAK,EAAEd,MAAM,EAAEuC,MAAM,EAAE5D,eAAe,IAAIqN,sBAAsB,EAAEvN,iBAAiB,IAAIwN,wBAAwB,EAAErN,YAAY,IAAIsN,mBAAmB,EAAExJ,wBAAwB,EAAEsE,YAAY,EAAEtD,SAAS,EAAEyC,WAAW,EAAEwD,aAAa,EAAEgB,WAAW,EAAEhI,OAAO,EAAEpC,kBAAkB,EAAE+C,WAAW,EAAEE,QAAQ,EAAE9C,WAAW,EAAE6C,iBAAiB,EAAE1C,SAAS,EAAE+D,SAAS,EAAE9B,eAAe,EAAEL,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}