{"ast":null,"code":"import _objectSpread from\"/Users/bomendez/Documents/CS5610/Battleship/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{BOARD_CLICK,RESTART,SET_GAME_TYPE,UPDATE_SCORE}from\"../actions/constants\";import{SIZE_TEN}from\"../components/constants\";function initialStateFunc(){var initialState={freePlay:false,user_board:buildBoard(),ai_board:buildBoard(),aiPlayed:true,aiScore:0,playerScore:0,freePlayScore:0};return initialState;}function buildBoard(){var arr=[];for(var i=0;i<10;i++){arr.push(buildinitialRows());}arr=putShipsOnBoard(arr);return arr;}function buildinitialRows(){var row=[];for(var i=0;i<10;i++){row.push(buildSquare());}return row;}function buildSquare(){var squareState={hit:false,miss:false,isBoat:false,unselected:true};return squareState;}function putShipsOnBoard(board){for(var ship in ships){board=placeOneShip(ship,ships[ship],board);}return board;}// Helper function to place one ship on board\nfunction placeOneShip(shipType,shipSize,board){var isVertical=getRandomInteger(2);var newRowCol=getRowAndCol(shipSize,isVertical);var randomRow=newRowCol[0];var randomCol=newRowCol[1];while(!shipPlacementValid(randomRow,randomCol,shipSize,isVertical,board)){newRowCol=getRowAndCol(shipSize,isVertical);randomRow=newRowCol[0];randomCol=newRowCol[1];}board=fillShip(randomRow,randomCol,shipSize,isVertical,board);return board;}// Validates whether the ship overlaps an existing ship in the given player's\n// ship attribute\nfunction shipPlacementValid(row,col,length,isVertical,board){// check each ship\nvar currRow=row;var currCol=col;for(var i=0;i<length;i++){if(isVertical){if(board[col][currRow].isBoat){return false;}currRow++;}else{if(board[currCol][row].isBoat){return false;}currCol++;}}return true;}// Adds the row/col of each ship to the given player's ships attribute\nfunction fillShip(row,col,length,fillVertical,board){var currRow=row;var currCol=col;for(var i=0;i<length;i++){if(fillVertical){board[col][currRow].isBoat=true;currRow++;}else{board[currCol][row].isBoat=true;currCol++;}}return board;}// Helper function to get random row and column values\nfunction getRowAndCol(shipSize,isVertical){var rowMax=SIZE_TEN;var colMax=SIZE_TEN;if(isVertical){rowMax=9-shipSize;}else{colMax=9-shipSize;}var randomRow=getRandomInteger(rowMax);var randomCol=getRandomInteger(colMax);return[randomRow,randomCol];}// Helper function that returns a random integer between\n// 0 (inclusive) and a given maxInt (exclusive)\nfunction getRandomInteger(maxInt){return Math.floor(Math.random()*maxInt);}//define a dictionary of ships with respective lengths. \nvar ships={carrier:5,battleship:4,destroyer:3,submarine:3,patrolBoat:2};// // REDUCER STARTS HERE\nexport var BoardReducer=function BoardReducer(state,action){if(state===undefined){return initialStateFunc();}if(action.type===BOARD_CLICK){var board;if(action.payload.enemy){board=state.ai_board;}else{board=state.user_board;}var boardCopy=board.map(function(arr){return arr.slice();});var squareCopy=_objectSpread({},boardCopy[action.payload.row][action.payload.col]);squareCopy.hit=action.payload.hit;squareCopy.miss=action.payload.miss;squareCopy.unselected=action.payload.unselected;boardCopy[action.payload.row][action.payload.col]=squareCopy;if(action.payload.enemy){return _objectSpread(_objectSpread({},state),{},{ai_board:boardCopy,aiPlayed:false});}else{return _objectSpread(_objectSpread({},state),{},{user_board:boardCopy,aiPlayed:true});}}if(action.type===UPDATE_SCORE){return _objectSpread(_objectSpread({},state),{},{aiScore:action.payload.aiScore,playerScore:action.payload.playerScore,freePlayScore:action.payload.freePlayScore});}if(action.type===SET_GAME_TYPE){// if score >=17 reset to 0\nreturn _objectSpread(_objectSpread({},state),{},{freePlay:action.payload.gameType===\"normal\"?false:true,user_board:buildBoard(),ai_board:buildBoard(),aiPlayed:true});}if(action.type===RESTART){var newUserBoard=[];var newAIBoard=[];newUserBoard=buildBoard();newAIBoard=buildBoard();return _objectSpread(_objectSpread({},state),{},{freePlay:action.payload.isFreePlay,user_board:newUserBoard,ai_board:newAIBoard});}return state;};","map":{"version":3,"names":["BOARD_CLICK","RESTART","SET_GAME_TYPE","UPDATE_SCORE","SIZE_TEN","initialStateFunc","initialState","freePlay","user_board","buildBoard","ai_board","aiPlayed","aiScore","playerScore","freePlayScore","arr","i","push","buildinitialRows","putShipsOnBoard","row","buildSquare","squareState","hit","miss","isBoat","unselected","board","ship","ships","placeOneShip","shipType","shipSize","isVertical","getRandomInteger","newRowCol","getRowAndCol","randomRow","randomCol","shipPlacementValid","fillShip","col","length","currRow","currCol","fillVertical","rowMax","colMax","maxInt","Math","floor","random","carrier","battleship","destroyer","submarine","patrolBoat","BoardReducer","state","action","undefined","type","payload","enemy","boardCopy","map","slice","squareCopy","_objectSpread","gameType","newUserBoard","newAIBoard","isFreePlay"],"sources":["/Users/bomendez/Documents/CS5610/Battleship/src/reducers/board.js"],"sourcesContent":["import { BOARD_CLICK, RESTART, SET_GAME_TYPE, UPDATE_SCORE } from \"../actions/constants\";\nimport { SIZE_TEN } from \"../components/constants\";\n\nfunction initialStateFunc() {\n  const initialState = {\n  freePlay: false,\n  user_board: buildBoard(),\n  ai_board: buildBoard(),\n  aiPlayed: true,\n  aiScore: 0,\n  playerScore: 0,\n  freePlayScore: 0,\n  }\n  return initialState\n \n}\n\n  \nfunction buildBoard(){\n  let arr = []\n  for(let i=0; i < 10; i++){\n    arr.push(buildinitialRows())\n  }\n  arr = putShipsOnBoard(arr)\n  return arr\n}\n\n\nfunction buildinitialRows(){\n  let row = []\n  for(let i=0; i< 10; i++){\n    row.push(buildSquare());\n  }\n  return row;\n}\n\n\nfunction buildSquare(){\n    let squareState = {\n      hit:false,\n      miss: false,\n      isBoat: false,\n      unselected: true\n    }\n  return squareState;\n}\n\n\nfunction putShipsOnBoard(board) {\n  for(let ship in ships){\n    board = placeOneShip(ship, ships[ship], board);\n  }\n  return board;\n}\n\n\n// Helper function to place one ship on board\nfunction placeOneShip(shipType, shipSize, board) {\n  let isVertical = getRandomInteger(2);\n\n  let newRowCol = getRowAndCol(shipSize, isVertical);\n  let randomRow = newRowCol[0];\n  let randomCol = newRowCol[1];\n\n  while (!shipPlacementValid(randomRow, randomCol, shipSize, isVertical, board)) {\n    newRowCol = getRowAndCol(shipSize, isVertical);\n    randomRow = newRowCol[0];\n    randomCol = newRowCol[1];\n  }\n  board = fillShip(randomRow, randomCol, shipSize, isVertical, board);\n  return board;\n}\n\n\n// Validates whether the ship overlaps an existing ship in the given player's\n// ship attribute\nfunction shipPlacementValid(row, col, length, isVertical, board) {\n  // check each ship\n  let currRow = row;\n  let currCol = col;\n  for (let i = 0; i < length; i++) {\n    if (isVertical) {\n      if (board[col][currRow].isBoat) {\n        return false;\n      }\n      currRow++;\n    } else {\n      if (board[currCol][row].isBoat) {\n        return false;\n      }\n      currCol++;\n    }\n  }\n  return true;\n}\n\n\n// Adds the row/col of each ship to the given player's ships attribute\nfunction fillShip(row, col, length, fillVertical, board) {\n  let currRow = row;\n  let currCol = col;\n  for (let i = 0; i < length; i++) {\n    if (fillVertical) {\n      board[col][currRow].isBoat = true;\n      currRow++;\n    } else {\n      board[currCol][row].isBoat = true;\n      currCol++;\n    }\n  }\n  return board;\n}\n\n\n// Helper function to get random row and column values\nfunction getRowAndCol(shipSize, isVertical) {\n  let rowMax = SIZE_TEN;\n  let colMax = SIZE_TEN;\n  if (isVertical) {\n    rowMax = 9 - shipSize;\n  } else {\n    colMax = 9 - shipSize;\n  }\n  let randomRow = getRandomInteger(rowMax);\n  let randomCol = getRandomInteger(colMax);\n  return [randomRow, randomCol];\n}\n\n\n// Helper function that returns a random integer between\n// 0 (inclusive) and a given maxInt (exclusive)\nfunction getRandomInteger(maxInt) {\n  return Math.floor(Math.random() * maxInt);\n}\n\n\n\n//define a dictionary of ships with respective lengths. \nconst ships = {\n  carrier: 5,\n  battleship: 4,\n  destroyer: 3,\n  submarine: 3,\n  patrolBoat: 2\n}\n\n  \n// // REDUCER STARTS HERE\nexport const BoardReducer = (state, action) => {\n  if (state === undefined) {\n    return initialStateFunc();\n  }\n  if (action.type === BOARD_CLICK) {\n    let board;\n    if (action.payload.enemy) {\n      board = state.ai_board;\n    } else {\n      board = state.user_board\n    }\n    let boardCopy = board.map(function(arr){\n      return arr.slice();\n    });\n    let squareCopy = { ...boardCopy[action.payload.row][action.payload.col] };\n    squareCopy.hit = action.payload.hit;\n    squareCopy.miss = action.payload.miss;\n    squareCopy.unselected = action.payload.unselected;\n    boardCopy[action.payload.row][action.payload.col] = squareCopy;\n    if (action.payload.enemy) {\n      return {\n        ...state,\n        ai_board : boardCopy,\n        aiPlayed : false\n      }\n    } else {\n      return {\n        ...state,\n        user_board : boardCopy,\n        aiPlayed : true\n      }\n    }\n  }\n  if (action.type === UPDATE_SCORE) {\n    return {\n      ...state,\n      aiScore: action.payload.aiScore,\n      playerScore: action.payload.playerScore,\n      freePlayScore: action.payload.freePlayScore,\n    }\n  }\n  if (action.type === SET_GAME_TYPE){\n    // if score >=17 reset to 0\n     return {\n     ...state,\n     freePlay : action.payload.gameType === \"normal\" ? false : true,\n     user_board: buildBoard(),\n     ai_board: buildBoard(),\n     aiPlayed: true\n     }\n  }\n  if (action.type === RESTART) {\n    let newUserBoard = []\n    let newAIBoard = []\n    newUserBoard = buildBoard()\n    newAIBoard = buildBoard()\n    return {\n      ...state,\n      freePlay: action.payload.isFreePlay,\n      user_board: newUserBoard,\n      ai_board: newAIBoard,\n    }\n  }\n   return state;\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}