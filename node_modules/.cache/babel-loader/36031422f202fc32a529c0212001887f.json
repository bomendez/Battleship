{"ast":null,"code":"var _jsxFileName = \"/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/game.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Board from './board.jsx';\nimport Restart from './restart.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { boardClick } from '../actions/board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst aiScoreFromLocalStorage = JSON.parse(localStorage.getItem(\"aiScore\") || \"0\");\nconst playerScoreFromLocalStorage = JSON.parse(localStorage.getItem(\"playerScore\") || \"0\");\n\nfunction Game() {\n  _s();\n\n  const dispatch = useDispatch();\n  const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n  const user_board = useSelector(state => state.BoardReducer.user_board);\n  const ai_board = useSelector(state => state.BoardReducer.ai_board);\n  const aiPlayed = useSelector(state => state.BoardReducer.aiPlayed);\n  const [aiScore, IncrementAIScore] = useState(aiScoreFromLocalStorage);\n  const [playerScore, incrementScore] = useState(playerScoreFromLocalStorage);\n  useEffect(() => {\n    localStorage.setItem(\"aiScore\", JSON.stringify(aiScore));\n    console.log(localStorage.getItem(\"aiScore\"));\n  }, [aiScore]);\n  useEffect(() => {\n    localStorage.setItem(\"playerScore\", JSON.stringify(playerScore));\n    console.log(localStorage.getItem(\"playerScore\"));\n  }, [playerScore]);\n  let winner = \"\";\n\n  if (aiScore == 17) {\n    winner = \"AI wins! Better luck next time.\";\n  }\n\n  if (playerScore == 17) {\n    winner = \"You win! Congrats!\";\n  }\n\n  function getRandomInteger(maxInt) {\n    return Math.floor(Math.random() * maxInt);\n  }\n\n  function isUnselected(x_coord, y_coord) {\n    if (user_board[x_coord][y_coord].unselected) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function checkCoordinateIsShip(x_coord, y_coord) {\n    if (user_board[x_coord][y_coord].isBoat) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function aiTurn() {\n    let x = getRandomInteger(10);\n    let y = getRandomInteger(10);\n\n    while (!isUnselected(x, y)) {\n      // get random number unselected\n      x = getRandomInteger(10);\n      y = getRandomInteger(10);\n    }\n\n    let hitShip = checkCoordinateIsShip(x, y); //exited while loop means, isUnselected returned true\n\n    let unselected = false;\n    let isEnemyBoard = false;\n    dispatch(boardClick(x, y, isEnemyBoard, hitShip, !hitShip, unselected));\n\n    if (hitShip) {\n      let oldScore = aiScore;\n      IncrementAIScore(oldScore + 1);\n    }\n  }\n\n  const resetScores = function () {\n    incrementScore(0);\n    IncrementAIScore(0);\n  };\n\n  if (!aiPlayed && !isFreePlay) {\n    aiTurn();\n  }\n\n  function incrementPlayerScore(isHit) {\n    incrementScore(playerScore + isHit);\n  }\n\n  if (isFreePlay) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container board-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Battleship\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Restart, {\n        score: resetScores\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-3 col-md-12 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your Score: \", playerScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-9 col-md-12 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(Board, {\n            enemy: true,\n            doIncrementEnemyScore: incrementPlayerScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container board-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Battleship\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Restart, {\n        score: resetScores\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-12 col-sm-12 playerBoard\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your Board, AI Score: \", aiScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Board, {\n            enemy: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-12 col-sm-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Enemy Board, Your Score: \", playerScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Board, {\n            enemy: true,\n            doIncrementEnemyScore: incrementPlayerScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(Game, \"UNfo2xEBZak0cEL5zxLQzqISaiw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/bomendez/Documents/CS5610/bo-mendez-srutikeerti-munukutla-pm2/src/components/game.jsx"],"names":["React","useState","useEffect","Board","Restart","useSelector","useDispatch","boardClick","aiScoreFromLocalStorage","JSON","parse","localStorage","getItem","playerScoreFromLocalStorage","Game","dispatch","isFreePlay","state","BoardReducer","freePlay","user_board","ai_board","aiPlayed","aiScore","IncrementAIScore","playerScore","incrementScore","setItem","stringify","console","log","winner","getRandomInteger","maxInt","Math","floor","random","isUnselected","x_coord","y_coord","unselected","checkCoordinateIsShip","isBoat","aiTurn","x","y","hitShip","isEnemyBoard","oldScore","resetScores","incrementPlayerScore","isHit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,uBAAuB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,KAAmC,GAA9C,CAAhC;AACA,MAAMC,2BAA2B,GAAGJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,KAAuC,GAAlD,CAApC;;AAEA,SAASE,IAAT,GAAgB;AAAA;;AACR,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,UAAU,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBC,QAA7B,CAA9B;AACA,QAAMC,UAAU,GAAGf,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBE,UAA7B,CAA9B;AACA,QAAMC,QAAQ,GAAGhB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBG,QAA7B,CAA5B;AACA,QAAMC,QAAQ,GAAGjB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBI,QAA7B,CAA5B;AACA,QAAM,CAACC,OAAD,EAAUC,gBAAV,IAA8BvB,QAAQ,CAACO,uBAAD,CAA5C;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAACY,2BAAD,CAA9C;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,YAAY,CAACgB,OAAb,CAAqB,SAArB,EAAgClB,IAAI,CAACmB,SAAL,CAAeL,OAAf,CAAhC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYnB,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAZ;AACH,GAHQ,EAGN,CAACW,OAAD,CAHM,CAAT;AAKArB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,YAAY,CAACgB,OAAb,CAAqB,aAArB,EAAoClB,IAAI,CAACmB,SAAL,CAAeH,WAAf,CAApC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYnB,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;AACH,GAHQ,EAGN,CAACa,WAAD,CAHM,CAAT;AAKA,MAAIM,MAAM,GAAG,EAAb;;AACA,MAAIR,OAAO,IAAI,EAAf,EAAmB;AACfQ,IAAAA,MAAM,GAAG,iCAAT;AACH;;AACD,MAAIN,WAAW,IAAI,EAAnB,EAAuB;AACnBM,IAAAA,MAAM,GAAG,oBAAT;AACH;;AAED,WAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AAC9B,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,MAA3B,CAAP;AACD;;AAED,WAASI,YAAT,CAAsBC,OAAtB,EAA+BC,OAA/B,EAAwC;AACtC,QAAGnB,UAAU,CAACkB,OAAD,CAAV,CAAoBC,OAApB,EAA6BC,UAAhC,EAA2C;AACvC,aAAO,IAAP;AACH,KAFD,MAEK;AACD,aAAO,KAAP;AACH;AACJ;;AAGD,WAASC,qBAAT,CAA+BH,OAA/B,EAAwCC,OAAxC,EAAiD;AAC7C,QAAGnB,UAAU,CAACkB,OAAD,CAAV,CAAoBC,OAApB,EAA6BG,MAAhC,EAAuC;AACnC,aAAO,IAAP;AACH;;AACG,WAAO,KAAP;AACL;;AAED,WAASC,MAAT,GAAkB;AAChB,QAAIC,CAAC,GAAGZ,gBAAgB,CAAC,EAAD,CAAxB;AACA,QAAIa,CAAC,GAAGb,gBAAgB,CAAC,EAAD,CAAxB;;AAEA,WAAO,CAACK,YAAY,CAACO,CAAD,EAAIC,CAAJ,CAApB,EAA4B;AACxB;AACAD,MAAAA,CAAC,GAAGZ,gBAAgB,CAAC,EAAD,CAApB;AACAa,MAAAA,CAAC,GAAGb,gBAAgB,CAAC,EAAD,CAApB;AACH;;AACD,QAAIc,OAAO,GAAGL,qBAAqB,CAACG,CAAD,EAAIC,CAAJ,CAAnC,CATgB,CAUhB;;AACA,QAAIL,UAAU,GAAG,KAAjB;AACA,QAAIO,YAAY,GAAG,KAAnB;AACAhC,IAAAA,QAAQ,CAACR,UAAU,CAACqC,CAAD,EAAIC,CAAJ,EAAOE,YAAP,EAAqBD,OAArB,EAA8B,CAACA,OAA/B,EAAwCN,UAAxC,CAAX,CAAR;;AACA,QAAGM,OAAH,EAAW;AACP,UAAIE,QAAQ,GAAGzB,OAAf;AACAC,MAAAA,gBAAgB,CAACwB,QAAQ,GAAC,CAAV,CAAhB;AACH;AACF;;AAED,QAAMC,WAAW,GAAG,YAAW;AAC7BvB,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAF,IAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACD,GAHD;;AAKA,MAAG,CAACF,QAAD,IAAa,CAACN,UAAjB,EAA4B;AAC1B2B,IAAAA,MAAM;AACP;;AAED,WAASO,oBAAT,CAA8BC,KAA9B,EAAoC;AAClCzB,IAAAA,cAAc,CAACD,WAAW,GAAG0B,KAAf,CAAd;AACD;;AAEH,MAAGnC,UAAH,EAAc;AACV,wBACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAKe;AAAL;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEkB;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,iCACI;AAAA,uCAAiBxB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAOA;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,KAAK,EAAG,IAAf;AAAqB,YAAA,qBAAqB,EAAEyB;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH,GAlBD,MAkBK;AACL,wBACA;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKnB;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEkB;AAAhB;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,0CAAf;AAAA,kCACI;AAAA,iDAA2B1B,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACA;AAAA,oDAA8BE,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEI,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE,IAAd;AAAoB,YAAA,qBAAqB,EAAEyB;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAqBC;AACR;;GAzHQpC,I;UACgBR,W,EACED,W,EACAA,W,EACFA,W,EACAA,W;;;KALhBS,I;AA2HT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Board from './board.jsx';\nimport Restart from './restart.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { boardClick } from '../actions/board';\n\nconst aiScoreFromLocalStorage = JSON.parse(localStorage.getItem(\"aiScore\") || \"0\")\nconst playerScoreFromLocalStorage = JSON.parse(localStorage.getItem(\"playerScore\") || \"0\")\n \nfunction Game() {\n        const dispatch = useDispatch();\n        const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n        const user_board = useSelector(state => state.BoardReducer.user_board);\n        const ai_board = useSelector(state => state.BoardReducer.ai_board);\n        const aiPlayed = useSelector(state => state.BoardReducer.aiPlayed);\n        const [aiScore, IncrementAIScore] = useState(aiScoreFromLocalStorage);\n        const [playerScore, incrementScore] = useState(playerScoreFromLocalStorage);\n\n        useEffect(() => {\n            localStorage.setItem(\"aiScore\", JSON.stringify(aiScore));\n            console.log(localStorage.getItem(\"aiScore\"))\n        }, [aiScore]);\n\n        useEffect(() => {\n            localStorage.setItem(\"playerScore\", JSON.stringify(playerScore));\n            console.log(localStorage.getItem(\"playerScore\"))\n        }, [playerScore]);\n\n        let winner = \"\"\n        if (aiScore == 17) {\n            winner = \"AI wins! Better luck next time.\"\n        }\n        if (playerScore == 17) {\n            winner = \"You win! Congrats!\"\n        }\n      \n        function getRandomInteger(maxInt) {\n            return Math.floor(Math.random() * maxInt);\n          }\n        \n          function isUnselected(x_coord, y_coord) {\n            if(user_board[x_coord][y_coord].unselected){\n                return true;\n            }else{\n                return false\n            }\n        }\n\n        \n        function checkCoordinateIsShip(x_coord, y_coord) {\n            if(user_board[x_coord][y_coord].isBoat){\n                return true;\n            }\n                return false\n          }\n        \n          function aiTurn() {\n            let x = getRandomInteger(10)\n            let y = getRandomInteger(10)\n    \n            while (!isUnselected(x, y)) {\n                // get random number unselected\n                x = getRandomInteger(10)\n                y = getRandomInteger(10)\n            }\n            let hitShip = checkCoordinateIsShip(x, y);\n            //exited while loop means, isUnselected returned true\n            let unselected = false;\n            let isEnemyBoard = false;\n            dispatch(boardClick(x, y, isEnemyBoard, hitShip, !hitShip, unselected))\n            if(hitShip){\n                let oldScore = aiScore;\n                IncrementAIScore(oldScore+1)\n            }\n          }\n\n          const resetScores = function() {\n            incrementScore(0);  \n            IncrementAIScore(0);\n          }\n        \n          if(!aiPlayed && !isFreePlay){\n            aiTurn();\n          }\n        \n          function incrementPlayerScore(isHit){\n            incrementScore(playerScore + isHit)\n          }\n\n        if(isFreePlay){\n            return(\n                <div className=\"container board-wrapper\">\n                <h1>Battleship</h1>\n                <h2>{winner}</h2>\n                <Restart score={resetScores}/>\n                <div className=\"row\">\n                <div className=\"col-lg-3 col-md-12 col-sm-12\">\n                    <h3>Your Score: {playerScore}</h3>\n                    {/* <div className=\"ScoreBoard\">          \n                    Ships Hit: {(17- boardStats.player_zero.score)}</div>\n                    <div className={winnerBoardClass}> Congratulations! You hit all ships</div> */}\n                </div>\n                <div className=\"col-lg-9 col-md-12 col-sm-12\">\n                    <Board enemy ={true} doIncrementEnemyScore={incrementPlayerScore}/>\n                </div>\n                </div>\n            </div>);\n        }else{\n        return (\n        <div className=\"container board-wrapper\">\n            <h1>Battleship</h1>            \n            <h2>{winner}</h2>\n            {/* <div className=\"ScoreBoard\">ScoreBoard: \n            Player: {playerTurn} <span> </span>\n            Score: {playerTurn === 0 ? (17 - boardStats.player_one.score): (17- boardStats.player_zero.score)}</div>\n            <div className={winnerBoardClass}>Player {playerZeroWins ? 0 : 1} wins the game</div> */}\n            <Restart score={resetScores}/>\n            <div className=\"row\">\n                <div className='col-lg-6 col-md-12 col-sm-12 playerBoard'>\n                    <h3>Your Board, AI Score: {aiScore}</h3>\n                    <Board enemy={false}/>\n                </div>\n                \n                <div className=\"col-lg-6 col-md-12 col-sm-12\">\n                <h3>Enemy Board, Your Score: {playerScore}</h3>\n                    <Board enemy={true} doIncrementEnemyScore={incrementPlayerScore}/>\n                </div>\n            </div>\n        </div>);\n        }\n}\n \nexport default Game;"]},"metadata":{},"sourceType":"module"}