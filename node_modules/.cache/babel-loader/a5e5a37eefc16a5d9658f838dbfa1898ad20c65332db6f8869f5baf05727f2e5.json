{"ast":null,"code":"var _jsxFileName = \"/Users/bomendez/Documents/CS5610/Battleship/src/components/game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Board from './board.jsx';\nimport Restart from './restart.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { boardClick } from '../actions/board';\nimport { updateScore } from '../actions/updateScore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const dispatch = useDispatch();\n  const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n  const user_board = useSelector(state => state.BoardReducer.user_board);\n  const ai_board = useSelector(state => state.BoardReducer.ai_board);\n  const aiPlayed = useSelector(state => state.BoardReducer.aiPlayed);\n  const aiScore = useSelector(state => state.BoardReducer.aiScore);\n  const playerScore = useSelector(state => state.BoardReducer.playerScore);\n  const freePlayScore = useSelector(state => state.BoardReducer.freePlayScore);\n  let winner = \"\";\n  if (aiScore == 17) {\n    winner = \"AI wins! Better luck next time.\";\n  }\n  if (playerScore == 17 || freePlayScore == 17) {\n    winner = \"You win! Congrats!\";\n  }\n  function getRandomInteger(maxInt) {\n    return Math.floor(Math.random() * maxInt);\n  }\n  function isUnselected(x_coord, y_coord) {\n    if (user_board[x_coord][y_coord].unselected) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  function checkCoordinateIsShip(x_coord, y_coord) {\n    if (user_board[x_coord][y_coord].isBoat) {\n      return true;\n    }\n    return false;\n  }\n  function aiTurn() {\n    let x = getRandomInteger(10);\n    let y = getRandomInteger(10);\n    while (!isUnselected(x, y)) {\n      // get random number unselected\n      x = getRandomInteger(10);\n      y = getRandomInteger(10);\n    }\n    let hitShip = checkCoordinateIsShip(x, y);\n    //exited while loop means, isUnselected returned true\n    let unselected = false;\n    let isEnemyBoard = false;\n    dispatch(boardClick(x, y, isEnemyBoard, hitShip, !hitShip, unselected));\n    if (hitShip) {\n      // get score and use set function here\n      let oldScore = aiScore;\n      dispatch(updateScore(oldScore + 1, playerScore, freePlayScore));\n    }\n  }\n  const resetScores = function () {\n    // use set function here\n    dispatch(updateScore(0, 0, 0));\n  };\n  if (!aiPlayed && !isFreePlay) {\n    aiTurn();\n  }\n  function incrementPlayerScore(isHit) {\n    // use set function here\n    if (isFreePlay) {\n      dispatch(updateScore(aiScore, playerScore, freePlayScore + isHit));\n    } else {\n      dispatch(updateScore(aiScore, playerScore + isHit, freePlayScore));\n    }\n  }\n  if (isFreePlay) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container board-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Battleship\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Restart, {\n        score: resetScores\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-3 col-md-12 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your Score: \", freePlayScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-9 col-md-12 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(Board, {\n            enemy: true,\n            doIncrementEnemyScore: incrementPlayerScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container board-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Battleship\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Restart, {\n        score: resetScores\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-12 col-sm-12 playerBoard\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your Board, AI Score: \", aiScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Board, {\n            enemy: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-12 col-sm-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Enemy Board, Your Score: \", playerScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Board, {\n            enemy: true,\n            doIncrementEnemyScore: incrementPlayerScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this);\n  }\n}\n_s(Game, \"wOAM2F80OCbXg1RWXiQThIuAFmo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","Restart","useSelector","useDispatch","boardClick","updateScore","jsxDEV","_jsxDEV","Game","_s","dispatch","isFreePlay","state","BoardReducer","freePlay","user_board","ai_board","aiPlayed","aiScore","playerScore","freePlayScore","winner","getRandomInteger","maxInt","Math","floor","random","isUnselected","x_coord","y_coord","unselected","checkCoordinateIsShip","isBoat","aiTurn","x","y","hitShip","isEnemyBoard","oldScore","resetScores","incrementPlayerScore","isHit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","score","enemy","doIncrementEnemyScore","_c","$RefreshReg$"],"sources":["/Users/bomendez/Documents/CS5610/Battleship/src/components/game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Board from './board.jsx';\nimport Restart from './restart.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { boardClick } from '../actions/board';\nimport { updateScore } from '../actions/updateScore';\n \nfunction Game() {\n        const dispatch = useDispatch();\n        const isFreePlay = useSelector(state => state.BoardReducer.freePlay);\n        const user_board = useSelector(state => state.BoardReducer.user_board);\n        const ai_board = useSelector(state => state.BoardReducer.ai_board);\n        const aiPlayed = useSelector(state => state.BoardReducer.aiPlayed);\n        const aiScore = useSelector(state => state.BoardReducer.aiScore);\n        const playerScore = useSelector(state => state.BoardReducer.playerScore);\n        const freePlayScore = useSelector(state => state.BoardReducer.freePlayScore);\n\n        let winner = \"\"\n        if (aiScore == 17) {\n            winner = \"AI wins! Better luck next time.\"\n        }\n        if (playerScore == 17 || freePlayScore == 17) {\n            winner = \"You win! Congrats!\"\n        }\n      \n        function getRandomInteger(maxInt) {\n            return Math.floor(Math.random() * maxInt);\n          }\n        \n          function isUnselected(x_coord, y_coord) {\n            if(user_board[x_coord][y_coord].unselected){\n                return true;\n            }else{\n                return false\n            }\n        }\n\n        \n        function checkCoordinateIsShip(x_coord, y_coord) {\n            if(user_board[x_coord][y_coord].isBoat){\n                return true;\n            }\n                return false\n          }\n        \n          function aiTurn() {\n            let x = getRandomInteger(10)\n            let y = getRandomInteger(10)\n    \n            while (!isUnselected(x, y)) {\n                // get random number unselected\n                x = getRandomInteger(10)\n                y = getRandomInteger(10)\n            }\n            let hitShip = checkCoordinateIsShip(x, y);\n            //exited while loop means, isUnselected returned true\n            let unselected = false;\n            let isEnemyBoard = false;\n            dispatch(boardClick(x, y, isEnemyBoard, hitShip, !hitShip, unselected))\n            if(hitShip){\n                // get score and use set function here\n                let oldScore = aiScore;\n                dispatch(updateScore(oldScore + 1, playerScore, freePlayScore))\n            }\n          }\n\n          const resetScores = function() {\n            // use set function here\n            dispatch(updateScore(0, 0, 0))\n          }\n        \n          if(!aiPlayed && !isFreePlay){\n            aiTurn();\n          }\n        \n          function incrementPlayerScore(isHit){\n            // use set function here\n            if (isFreePlay) {\n                dispatch(updateScore(aiScore, playerScore, freePlayScore + isHit))\n            } else {\n                dispatch(updateScore(aiScore, playerScore + isHit, freePlayScore))\n            }\n          }\n\n        if(isFreePlay){\n            return(\n                <div className=\"container board-wrapper\">\n                <h1>Battleship</h1>\n                <h2>{winner}</h2>\n                <Restart score={resetScores}/>\n                <div className=\"row\">\n                <div className=\"col-lg-3 col-md-12 col-sm-12\">\n                    <h3>Your Score: {freePlayScore}</h3>\n                    {/* <div className=\"ScoreBoard\">          \n                    Ships Hit: {(17- boardStats.player_zero.score)}</div>\n                    <div className={winnerBoardClass}> Congratulations! You hit all ships</div> */}\n                </div>\n                <div className=\"col-lg-9 col-md-12 col-sm-12\">\n                    <Board enemy ={true} doIncrementEnemyScore={incrementPlayerScore}/>\n                </div>\n                </div>\n            </div>);\n        }else{\n        return (\n        <div className=\"container board-wrapper\">\n            <h1>Battleship</h1>            \n            <h2>{winner}</h2>\n            {/* <div className=\"ScoreBoard\">ScoreBoard: \n            Player: {playerTurn} <span> </span>\n            Score: {playerTurn === 0 ? (17 - boardStats.player_one.score): (17- boardStats.player_zero.score)}</div>\n            <div className={winnerBoardClass}>Player {playerZeroWins ? 0 : 1} wins the game</div> */}\n            <Restart score={resetScores}/>\n            <div className=\"row\">\n                <div className='col-lg-6 col-md-12 col-sm-12 playerBoard'>\n                    <h3>Your Board, AI Score: {aiScore}</h3>\n                    <Board enemy={false}/>\n                </div>\n                \n                <div className=\"col-lg-6 col-md-12 col-sm-12\">\n                <h3>Enemy Board, Your Score: {playerScore}</h3>\n                    <Board enemy={true} doIncrementEnemyScore={incrementPlayerScore}/>\n                </div>\n            </div>\n        </div>);\n        }\n}\n \nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}